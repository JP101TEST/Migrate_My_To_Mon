20/08/2024 09:35:34|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 32588 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 09:35:34|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 09:35:35|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:35:35|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 09:35:35|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 72 ms. Found 1 JPA repository interface.
20/08/2024 09:35:35|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:35:35|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 09:35:35|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 09:35:35|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 09:35:35|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 09:35:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 09:35:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 09:35:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 09:35:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 09:35:35|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1493 ms
20/08/2024 09:35:36|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 09:35:36|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 09:35:36|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 09:35:36|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 09:35:36|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 09:35:37|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5b6cc344
20/08/2024 09:35:37|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 09:35:37|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 09:35:38|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 09:35:38|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:35:38|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 09:35:39|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@66e44f9f, com.mongodb.Jep395RecordCodecProvider@79f82fc4, com.mongodb.KotlinCodecProvider@554db19d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 09:35:39|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26658400}
20/08/2024 09:35:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 09:35:39|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 09:35:39|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 5.503 seconds (process running for 6.876)
20/08/2024 09:41:58|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 09:41:58|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 09:41:58|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 09:42:01|Migrate project|||sourceIp|UploadService.java:36 |INFO  - Upload |Top 1000 technology companies.csv| successful.
20/08/2024 09:42:20|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:42:20|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 09:42:20|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 09:42:24|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 38592 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 09:42:24|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 09:42:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:42:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 09:42:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 47 ms. Found 1 JPA repository interface.
20/08/2024 09:42:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:42:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 09:42:25|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 09:42:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 09:42:25|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 09:42:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 09:42:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 09:42:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 09:42:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 09:42:25|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1129 ms
20/08/2024 09:42:25|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 09:42:26|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 09:42:26|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 09:42:26|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 09:42:26|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 09:42:26|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2047adea
20/08/2024 09:42:26|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 09:42:26|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 09:42:27|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 09:42:27|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:42:27|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 09:42:27|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@345d4ecb, com.mongodb.Jep395RecordCodecProvider@66e44f9f, com.mongodb.KotlinCodecProvider@79f82fc4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 09:42:27|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19165900}
20/08/2024 09:42:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 09:42:28|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 09:42:28|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.953 seconds (process running for 4.92)
20/08/2024 09:42:34|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 09:42:34|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 09:42:34|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 09:42:38|Migrate project|||sourceIp|UploadService.java:36 |INFO  - Upload |Top 1000 technology companies.csv| successful.
20/08/2024 09:43:08|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:43:08|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 09:43:08|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 09:43:12|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 14452 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 09:43:12|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 09:43:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:43:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 09:43:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 46 ms. Found 1 JPA repository interface.
20/08/2024 09:43:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:43:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 09:43:13|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 09:43:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 09:43:13|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 09:43:13|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 09:43:13|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 09:43:13|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 09:43:13|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 09:43:13|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1126 ms
20/08/2024 09:43:13|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 09:43:13|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 09:43:13|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 09:43:14|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 09:43:14|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 09:43:14|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c82ad22
20/08/2024 09:43:14|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 09:43:14|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 09:43:15|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 09:43:15|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:43:15|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 09:43:15|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@473c491, com.mongodb.Jep395RecordCodecProvider@3ede428e, com.mongodb.KotlinCodecProvider@70a8654]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 09:43:15|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21381600}
20/08/2024 09:43:15|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 09:43:15|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 09:43:15|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.932 seconds (process running for 4.834)
20/08/2024 09:43:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 09:43:21|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 09:43:21|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 09:43:24|Migrate project|||sourceIp|UploadService.java:36 |INFO  - Upload |Top 1000 technology companies.csv| successful.
20/08/2024 09:44:08|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:44:08|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 09:44:08|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 09:44:11|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 39316 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 09:44:11|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 09:44:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:44:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 09:44:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 47 ms. Found 1 JPA repository interface.
20/08/2024 09:44:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:44:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 09:44:12|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 09:44:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 09:44:12|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 09:44:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 09:44:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 09:44:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 09:44:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 09:44:12|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1119 ms
20/08/2024 09:44:13|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 09:44:13|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 09:44:13|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 09:44:13|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 09:44:13|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 09:44:13|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@51869ad6
20/08/2024 09:44:13|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 09:44:13|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 09:44:14|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 09:44:14|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:44:14|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 09:44:15|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2fda92e0, com.mongodb.Jep395RecordCodecProvider@535adf36, com.mongodb.KotlinCodecProvider@4ea4290f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 09:44:15|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23975500}
20/08/2024 09:44:15|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 09:44:15|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 09:44:15|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.943 seconds (process running for 4.823)
20/08/2024 09:44:18|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 09:44:18|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 09:44:18|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 09:44:19|Migrate project|||sourceIp|DirectJDKLog.java:175 |ERROR - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 0] with root cause
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 0
	at com.example.migrate.api.Upload.upload(Upload.java:25) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1570) [?:?]
20/08/2024 09:44:34|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:44:34|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 09:44:34|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 09:44:37|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 8028 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 09:44:37|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 09:44:38|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:44:38|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 09:44:38|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 44 ms. Found 1 JPA repository interface.
20/08/2024 09:44:38|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:44:38|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 09:44:38|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 09:44:38|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 09:44:39|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 09:44:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 09:44:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 09:44:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 09:44:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 09:44:39|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1097 ms
20/08/2024 09:44:39|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 09:44:39|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 09:44:39|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 09:44:39|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 09:44:39|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 09:44:39|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c82ad22
20/08/2024 09:44:39|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 09:44:39|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 09:44:40|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 09:44:40|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:44:40|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 09:44:41|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@473c491, com.mongodb.Jep395RecordCodecProvider@3ede428e, com.mongodb.KotlinCodecProvider@70a8654]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 09:44:41|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24579400}
20/08/2024 09:44:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 09:44:41|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 09:44:41|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.007 seconds (process running for 4.877)
20/08/2024 09:44:43|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 09:44:43|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 09:44:43|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 09:44:46|Migrate project|||sourceIp|UploadService.java:36 |INFO  - Upload |Top 1000 technology companies.csv| successful.
20/08/2024 09:47:51|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:47:51|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 09:47:51|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 09:47:55|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 3432 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 09:47:55|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 09:47:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:47:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 09:47:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 45 ms. Found 1 JPA repository interface.
20/08/2024 09:47:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 09:47:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 09:47:56|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 09:47:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 09:47:56|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 09:47:56|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 09:47:56|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 09:47:56|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 09:47:56|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 09:47:56|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1145 ms
20/08/2024 09:47:57|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 09:47:57|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 09:47:57|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 09:47:57|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 09:47:57|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 09:47:57|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@148b6f95
20/08/2024 09:47:57|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 09:47:57|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 09:47:58|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 09:47:58|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 09:47:58|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 09:47:59|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4ea4290f, com.mongodb.Jep395RecordCodecProvider@25cef4b3, com.mongodb.KotlinCodecProvider@5e783f78]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 09:47:59|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17990900}
20/08/2024 09:47:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 09:47:59|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 09:47:59|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.953 seconds (process running for 4.839)
20/08/2024 09:48:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 09:48:02|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 09:48:02|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 09:48:05|Migrate project|||sourceIp|UploadService.java:36 |INFO  - Upload |Top 1000 technology companies.csv| successful.
20/08/2024 10:10:14|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:10:14|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:10:14|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:10:18|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 41380 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:10:18|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:10:19|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:10:19|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:10:19|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 51 ms. Found 1 JPA repository interface.
20/08/2024 10:10:19|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:10:19|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:10:19|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:10:19|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:10:19|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:10:19|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:10:19|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:10:19|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:10:20|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:10:20|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1148 ms
20/08/2024 10:10:20|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:10:20|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:10:20|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:10:20|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:10:20|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:10:21|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1c411474
20/08/2024 10:10:21|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:10:21|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:10:21|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:10:21|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:10:22|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:10:22|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@14927cd4, com.mongodb.Jep395RecordCodecProvider@5a106b26, com.mongodb.KotlinCodecProvider@445d878c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:10:22|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24277200}
20/08/2024 10:10:22|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:10:22|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:10:22|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.239 seconds (process running for 5.219)
20/08/2024 10:11:36|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 10:11:36|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 10:11:36|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 10:11:36|Migrate project|||sourceIp|MigrateService.java:11 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 10:19:10|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:19:10|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:19:10|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:19:14|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 10764 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:19:14|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:19:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:19:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:19:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 40 ms. Found 1 JPA repository interface.
20/08/2024 10:19:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:19:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:19:14|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:19:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:19:15|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:19:15|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:19:15|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:19:15|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:19:15|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:19:15|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1136 ms
20/08/2024 10:19:15|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:19:15|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:19:15|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:19:16|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:19:16|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:19:16|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5fe3b058
20/08/2024 10:19:16|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:19:16|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:19:17|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:19:17|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:19:17|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:19:17|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@66ab3716, com.mongodb.Jep395RecordCodecProvider@103a1ad3, com.mongodb.KotlinCodecProvider@1d6ed085]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:19:17|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19873300}
20/08/2024 10:19:17|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:19:17|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:19:17|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.964 seconds (process running for 4.957)
20/08/2024 10:19:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 10:19:21|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 10:19:21|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 10:19:21|Migrate project|||sourceIp|MigrateService.java:23 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 10:29:00|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:29:00|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:29:00|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:29:05|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 20824 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:29:05|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:29:05|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:29:05|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:29:05|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 48 ms. Found 1 JPA repository interface.
20/08/2024 10:29:05|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:29:05|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:29:05|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:29:05|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:29:06|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:29:06|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:29:06|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:29:06|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:29:06|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:29:06|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1122 ms
20/08/2024 10:29:06|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:29:06|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:29:06|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:29:06|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:29:07|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:29:07|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5c60c08
20/08/2024 10:29:07|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:29:07|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:29:07|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:29:08|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:29:08|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:29:08|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@66ab3716, com.mongodb.Jep395RecordCodecProvider@103a1ad3, com.mongodb.KotlinCodecProvider@1d6ed085]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:29:08|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17248100}
20/08/2024 10:29:08|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:29:08|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:29:08|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.945 seconds (process running for 4.927)
20/08/2024 10:29:10|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 10:29:10|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 10:29:10|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 10:29:10|Migrate project|||sourceIp|MigrateService.java:28 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 10:51:40|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:51:40|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:51:40|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:51:45|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 12492 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:51:45|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:51:46|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:51:46|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:51:46|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
20/08/2024 10:51:46|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:51:46|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:51:46|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:51:46|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:51:46|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 12 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:51:46|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:51:46|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:51:46|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:51:46|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:51:46|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:51:46|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1200 ms
20/08/2024 10:51:47|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:51:47|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:51:47|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:51:47|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:51:47|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:51:47|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a2035e1
20/08/2024 10:51:47|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:51:47|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:51:48|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:51:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:51:48|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:51:48|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:51:49|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@516370c1, com.mongodb.Jep395RecordCodecProvider@27563444, com.mongodb.KotlinCodecProvider@507e3e77]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:51:49|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20317800}
20/08/2024 10:51:49|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:51:49|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:51:49|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.313 seconds (process running for 5.272)
20/08/2024 10:51:51|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 10:51:51|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 10:51:51|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 0 ms
20/08/2024 10:51:51|Migrate project|||sourceIp|MigrateService.java:28 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 10:52:49|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:52:49|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:52:49|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:52:53|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 12772 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:52:53|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:52:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:52:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:52:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 51 ms. Found 2 JPA repository interfaces.
20/08/2024 10:52:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:52:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:52:54|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:52:54|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:52:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:52:54|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:52:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:52:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:52:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:52:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:52:54|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1168 ms
20/08/2024 10:52:55|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:52:55|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:52:55|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:52:55|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:52:55|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:52:55|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 10:52:55|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:52:55|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:52:56|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:52:56|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:52:56|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:52:56|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:52:57|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2898c70d, com.mongodb.Jep395RecordCodecProvider@ec67be1, com.mongodb.KotlinCodecProvider@64a00fe0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:52:57|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19685900}
20/08/2024 10:52:57|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:52:57|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:52:57|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.158 seconds (process running for 5.108)
20/08/2024 10:52:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 10:52:59|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 10:52:59|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 10:52:59|Migrate project|||sourceIp|MigrateService.java:29 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 10:53:41|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:53:41|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:53:41|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:53:45|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 29524 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:53:45|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:53:45|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:53:45|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:53:45|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 47 ms. Found 2 JPA repository interfaces.
20/08/2024 10:53:45|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:53:45|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:53:45|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:53:45|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:53:45|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:53:46|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:53:46|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:53:46|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:53:46|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:53:46|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:53:46|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1117 ms
20/08/2024 10:53:46|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:53:46|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:53:46|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:53:46|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:53:46|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:53:47|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 10:53:47|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:53:47|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:53:47|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:53:47|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:53:47|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:53:48|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:53:48|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@ec67be1, com.mongodb.Jep395RecordCodecProvider@64a00fe0, com.mongodb.KotlinCodecProvider@347f0950]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:53:48|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18385200}
20/08/2024 10:53:48|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:53:48|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:53:48|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.204 seconds (process running for 5.073)
20/08/2024 10:53:50|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 10:53:50|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 10:53:50|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 10:53:50|Migrate project|||sourceIp|MigrateService.java:30 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 10:54:34|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:54:34|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:54:34|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:54:38|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 4588 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:54:38|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:54:38|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:54:38|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:54:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 2 JPA repository interfaces.
20/08/2024 10:54:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:54:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:54:39|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:54:39|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:54:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:54:39|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:54:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:54:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:54:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:54:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:54:39|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1232 ms
20/08/2024 10:54:39|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:54:39|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:54:39|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:54:40|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:54:40|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:54:40|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c47e077
20/08/2024 10:54:40|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:54:40|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:54:41|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:54:41|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:54:41|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:54:41|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:54:41|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@41c56930, com.mongodb.Jep395RecordCodecProvider@60660d21, com.mongodb.KotlinCodecProvider@2898c70d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:54:41|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24593800}
20/08/2024 10:54:42|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:54:42|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:54:42|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.141 seconds (process running for 5.015)
20/08/2024 10:54:56|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:54:56|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:54:56|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:54:58|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 12216 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:54:58|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:54:59|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:54:59|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:54:59|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 66 ms. Found 2 JPA repository interfaces.
20/08/2024 10:54:59|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:54:59|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:54:59|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:54:59|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:54:59|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 14 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:54:59|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:54:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:54:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:54:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:55:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:55:00|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1465 ms
20/08/2024 10:55:00|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:55:00|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:55:00|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:55:00|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:55:00|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:55:01|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b56c222
20/08/2024 10:55:01|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:55:01|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:55:01|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:55:01|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:55:01|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:55:02|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:55:02|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@27563444, com.mongodb.Jep395RecordCodecProvider@507e3e77, com.mongodb.KotlinCodecProvider@73796ae5]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:55:02|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26638100}
20/08/2024 10:55:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:55:02|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:55:02|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.74 seconds (process running for 5.788)
20/08/2024 10:55:53|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:55:53|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:55:53|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:55:57|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 12896 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:55:57|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:55:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:55:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:55:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 51 ms. Found 2 JPA repository interfaces.
20/08/2024 10:55:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:55:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:55:58|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:55:58|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:55:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:55:58|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:55:58|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:55:58|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:55:58|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:55:58|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:55:58|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1122 ms
20/08/2024 10:55:58|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:55:59|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:55:59|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:55:59|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:55:59|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:55:59|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@49cceb19
20/08/2024 10:55:59|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:55:59|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:56:00|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:56:00|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:56:00|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:56:00|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:56:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@19565b5, com.mongodb.Jep395RecordCodecProvider@2ac7c683, com.mongodb.KotlinCodecProvider@407ff25f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:56:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18885000}
20/08/2024 10:56:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:56:01|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:56:01|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.972 seconds (process running for 4.866)
20/08/2024 10:57:35|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:57:35|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:57:35|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:57:39|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 28796 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:57:39|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:57:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:57:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:57:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 51 ms. Found 2 JPA repository interfaces.
20/08/2024 10:57:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:57:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:57:40|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:57:40|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:57:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:57:40|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:57:40|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:57:40|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:57:40|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:57:40|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:57:40|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1167 ms
20/08/2024 10:57:41|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:57:41|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:57:41|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:57:41|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:57:41|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:57:41|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41bd6a0f
20/08/2024 10:57:41|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:57:41|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:57:42|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:57:42|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release date not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null, primary key (id)) engine=InnoDB' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:57:42|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:57:42|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:57:43|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@347f0950, com.mongodb.Jep395RecordCodecProvider@5ab1107d, com.mongodb.KotlinCodecProvider@671561b9]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:57:43|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18055900}
20/08/2024 10:57:43|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:57:43|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:57:43|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.041 seconds (process running for 4.944)
20/08/2024 10:57:55|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:57:55|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:57:55|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:57:59|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 42740 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:57:59|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:58:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:58:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:58:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
20/08/2024 10:58:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:58:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:58:00|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:58:00|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:58:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:58:00|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:58:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:58:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:58:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:58:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:58:00|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1129 ms
20/08/2024 10:58:00|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:58:00|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:58:00|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:58:01|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:58:01|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:58:01|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c47e077
20/08/2024 10:58:01|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:58:01|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:58:02|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:58:02|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release datetime(6) not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null, primary key (id)) engine=InnoDB' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release datetime(6) not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null, primary key (id)) engine=InnoDB' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null, primary key (id)) engine=InnoDB' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:58:02|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:58:02|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:58:02|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@41c56930, com.mongodb.Jep395RecordCodecProvider@60660d21, com.mongodb.KotlinCodecProvider@2898c70d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:58:02|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21639300}
20/08/2024 10:58:03|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:58:03|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:58:03|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.989 seconds (process running for 4.849)
20/08/2024 10:58:25|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:58:25|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:58:25|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:58:29|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 42388 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:58:29|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:58:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:58:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:58:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 44 ms. Found 2 JPA repository interfaces.
20/08/2024 10:58:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:58:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:58:30|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:58:30|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:58:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:58:30|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:58:30|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:58:30|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:58:30|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:58:30|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:58:30|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1104 ms
20/08/2024 10:58:30|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:58:30|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:58:31|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:58:31|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:58:31|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:58:31|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30bbe83
20/08/2024 10:58:31|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:58:31|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:58:32|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:58:32|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release datetime(6) not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null, primary key (id)) engine=InnoDB' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table car (id bigint not null auto_increment, company_name varchar(255) not null, model_name varchar(255) not null, release datetime(6) not null, primary key (id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null, primary key (id)) engine=InnoDB' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null, primary key (id)) engine=InnoDB' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:58:32|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:58:32|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:58:33|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@73796ae5, com.mongodb.Jep395RecordCodecProvider@3956e933, com.mongodb.KotlinCodecProvider@2fb40e49]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:58:33|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19242400}
20/08/2024 10:58:33|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:58:33|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:58:33|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.948 seconds (process running for 4.807)
20/08/2024 10:58:39|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:58:39|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:58:39|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:58:43|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 6464 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:58:43|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:58:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:58:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:58:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 49 ms. Found 2 JPA repository interfaces.
20/08/2024 10:58:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:58:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:58:44|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:58:44|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:58:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:58:44|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:58:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:58:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:58:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:58:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:58:44|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1153 ms
20/08/2024 10:58:44|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:58:45|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:58:45|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:58:45|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:58:45|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:58:45|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38cf4497
20/08/2024 10:58:45|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:58:45|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:58:46|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:58:46|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:58:46|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:58:47|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2a5d9ede, com.mongodb.Jep395RecordCodecProvider@39e91bda, com.mongodb.KotlinCodecProvider@2c3f81ef]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:58:47|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23676000}
20/08/2024 10:58:47|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:58:47|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:58:47|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.127 seconds (process running for 5.013)
20/08/2024 10:59:08|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:59:08|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 10:59:08|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 10:59:12|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 19652 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 10:59:12|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 10:59:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:59:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 10:59:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 71 ms. Found 2 JPA repository interfaces.
20/08/2024 10:59:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 10:59:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 10:59:12|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:59:12|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 10:59:12|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
20/08/2024 10:59:13|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 10:59:13|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 10:59:13|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 10:59:13|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 10:59:13|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 10:59:13|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1355 ms
20/08/2024 10:59:13|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 10:59:13|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 10:59:13|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 10:59:14|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 10:59:14|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 10:59:14|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 10:59:14|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 10:59:14|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 10:59:15|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 10:59:15|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table car add column release date not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table car add column release date not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 10:59:15|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 10:59:15|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 10:59:15|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@407ff25f, com.mongodb.Jep395RecordCodecProvider@3ba8fbc8, com.mongodb.KotlinCodecProvider@113a89c5]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 10:59:15|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23608300}
20/08/2024 10:59:16|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 10:59:16|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 10:59:16|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.291 seconds (process running for 5.232)
20/08/2024 11:00:54|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:00:54|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 11:00:54|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 11:00:58|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 37088 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 11:00:58|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 11:00:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:00:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 11:00:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
20/08/2024 11:00:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:00:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 11:00:58|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:00:58|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:00:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 11:00:59|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 11:00:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 11:00:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 11:00:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 11:00:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 11:00:59|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1138 ms
20/08/2024 11:00:59|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 11:00:59|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 11:00:59|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 11:00:59|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 11:00:59|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 11:01:00|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@638d2ce3
20/08/2024 11:01:00|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 11:01:00|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 11:01:00|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 11:01:00|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table car add column release date not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table car add column release date not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 11:01:00|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:01:01|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 11:01:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@752e50c6, com.mongodb.Jep395RecordCodecProvider@2bef33e7, com.mongodb.KotlinCodecProvider@5bd191c2]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 11:01:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19099700}
20/08/2024 11:01:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 11:01:01|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 11:01:01|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.985 seconds (process running for 4.878)
20/08/2024 11:01:26|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:01:26|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 11:01:26|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 11:01:30|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 16764 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 11:01:30|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 11:01:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:01:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 11:01:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
20/08/2024 11:01:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:01:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 11:01:30|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:01:30|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:01:30|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 11:01:31|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 11:01:31|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 11:01:31|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 11:01:31|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 11:01:31|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 11:01:31|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1121 ms
20/08/2024 11:01:31|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 11:01:31|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 11:01:31|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 11:01:31|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 11:01:31|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 11:01:32|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@647ff23e
20/08/2024 11:01:32|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 11:01:32|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 11:01:32|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 11:01:32|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table car add column release datetime(6) not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table car add column release datetime(6) not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 11:01:32|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:01:33|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 11:01:33|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@64a00fe0, com.mongodb.Jep395RecordCodecProvider@347f0950, com.mongodb.KotlinCodecProvider@5ab1107d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 11:01:33|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20317700}
20/08/2024 11:01:33|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 11:01:33|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 11:01:33|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.911 seconds (process running for 4.785)
20/08/2024 11:03:16|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:03:16|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 11:03:16|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 11:03:20|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 30760 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 11:03:20|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 11:03:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:03:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 11:03:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
20/08/2024 11:03:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:03:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 11:03:21|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:03:21|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:03:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 11:03:21|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 11:03:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 11:03:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 11:03:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 11:03:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 11:03:21|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1107 ms
20/08/2024 11:03:22|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 11:03:22|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 11:03:22|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 11:03:22|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 11:03:22|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 11:03:22|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38cf4497
20/08/2024 11:03:22|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 11:03:22|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 11:03:23|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 11:03:23|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table car add column release datetime(6) not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table car add column release datetime(6) not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release datetime(6) not null' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 11:03:23|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:03:23|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 11:03:24|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@19565b5, com.mongodb.Jep395RecordCodecProvider@2ac7c683, com.mongodb.KotlinCodecProvider@407ff25f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 11:03:24|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20301000}
20/08/2024 11:03:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 11:03:24|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 11:03:24|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.889 seconds (process running for 4.814)
20/08/2024 11:04:28|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:04:28|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 11:04:28|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 11:04:32|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 31160 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 11:04:32|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 11:04:32|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:04:32|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 11:04:33|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 47 ms. Found 2 JPA repository interfaces.
20/08/2024 11:04:33|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:04:33|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 11:04:33|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:04:33|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:04:33|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 11:04:33|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 11:04:33|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 11:04:33|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 11:04:33|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 11:04:33|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 11:04:33|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1248 ms
20/08/2024 11:04:33|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 11:04:33|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 11:04:33|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 11:04:34|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 11:04:34|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 11:04:34|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43d6262c
20/08/2024 11:04:34|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 11:04:34|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 11:04:35|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 11:04:35|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table car add column release date not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table car add column release date not null" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date not null' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 11:04:35|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:04:35|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 11:04:36|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@51806858, com.mongodb.Jep395RecordCodecProvider@56afbace, com.mongodb.KotlinCodecProvider@40dcbf7]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 11:04:36|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18079400}
20/08/2024 11:04:36|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 11:04:36|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 11:04:36|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.407 seconds (process running for 5.438)
20/08/2024 11:04:56|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:04:56|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 11:04:56|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 11:05:00|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 22584 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 11:05:00|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 11:05:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:05:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 11:05:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
20/08/2024 11:05:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:05:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 11:05:01|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:05:01|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:05:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 11:05:01|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 11:05:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 11:05:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 11:05:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 11:05:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 11:05:01|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1154 ms
20/08/2024 11:05:01|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 11:05:01|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 11:05:01|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 11:05:02|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 11:05:02|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 11:05:02|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@647ff23e
20/08/2024 11:05:02|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 11:05:02|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 11:05:03|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 11:05:03|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table car add column release date" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table car add column release date" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release date' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 11:05:03|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:05:03|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 11:05:03|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1db7c267, com.mongodb.Jep395RecordCodecProvider@516370c1, com.mongodb.KotlinCodecProvider@27563444]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 11:05:04|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18835200}
20/08/2024 11:05:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 11:05:04|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 11:05:04|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.019 seconds (process running for 4.94)
20/08/2024 11:05:55|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:05:55|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 11:05:55|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 11:05:59|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 15656 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 11:05:59|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 11:06:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:06:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 11:06:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 51 ms. Found 2 JPA repository interfaces.
20/08/2024 11:06:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:06:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 11:06:00|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:06:00|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:06:00|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 11:06:00|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 11:06:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 11:06:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 11:06:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 11:06:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 11:06:00|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1202 ms
20/08/2024 11:06:01|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 11:06:01|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 11:06:01|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 11:06:01|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 11:06:01|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 11:06:01|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 11:06:01|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 11:06:01|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 11:06:02|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 11:06:02|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:06:02|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 11:06:03|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@709c6768, com.mongodb.Jep395RecordCodecProvider@3e356ed6, com.mongodb.KotlinCodecProvider@403b7be3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 11:06:03|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19358200}
20/08/2024 11:06:03|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 11:06:03|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 11:06:03|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.154 seconds (process running for 5.035)
20/08/2024 11:06:09|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:06:09|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 11:06:09|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 11:06:13|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 3464 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 11:06:13|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 11:06:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:06:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 11:06:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 2 JPA repository interfaces.
20/08/2024 11:06:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:06:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 11:06:14|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:06:14|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:06:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 13 ms. Found 0 MongoDB repository interfaces.
20/08/2024 11:06:14|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 11:06:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 11:06:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 11:06:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 11:06:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 11:06:14|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1209 ms
20/08/2024 11:06:14|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 11:06:14|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 11:06:14|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 11:06:15|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 11:06:15|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 11:06:15|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@131d977f
20/08/2024 11:06:15|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 11:06:15|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 11:06:16|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 11:06:16|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:06:16|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 11:06:17|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5603632c, com.mongodb.Jep395RecordCodecProvider@76685ab0, com.mongodb.KotlinCodecProvider@7bbe5548]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 11:06:17|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21140200}
20/08/2024 11:06:17|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 11:06:17|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 11:06:17|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.43 seconds (process running for 5.457)
20/08/2024 11:07:18|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:07:18|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 11:07:18|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 11:07:22|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 31076 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 11:07:22|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 11:07:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:07:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 11:07:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
20/08/2024 11:07:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 11:07:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 11:07:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:07:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 11:07:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 11:07:24|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 11:07:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 11:07:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 11:07:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 11:07:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 11:07:24|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1250 ms
20/08/2024 11:07:24|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 11:07:24|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 11:07:24|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 11:07:24|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 11:07:24|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 11:07:25|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43d6262c
20/08/2024 11:07:25|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 11:07:25|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 11:07:25|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 11:07:25|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 11:07:26|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 11:07:26|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76685ab0, com.mongodb.Jep395RecordCodecProvider@7bbe5548, com.mongodb.KotlinCodecProvider@7305a443]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 11:07:26|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22899100}
20/08/2024 11:07:26|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 11:07:26|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 11:07:26|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.471 seconds (process running for 5.45)
20/08/2024 11:07:30|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 11:07:30|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 11:07:30|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 11:07:30|Migrate project|||sourceIp|UploadService.java:48 |INFO  - Upload |car.csv| successful.
20/08/2024 13:10:48|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:10:48|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:10:48|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:10:52|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 22612 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:10:52|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:10:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:10:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:10:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
20/08/2024 13:10:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:10:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:10:52|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:10:52|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:10:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 12 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:10:53|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:10:53|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:10:53|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:10:53|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:10:53|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:10:53|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1189 ms
20/08/2024 13:10:53|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:10:53|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:10:53|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:10:53|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:10:53|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:10:54|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41bd6a0f
20/08/2024 13:10:54|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:10:54|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:10:54|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:10:55|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:10:55|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:10:55|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@709c6768, com.mongodb.Jep395RecordCodecProvider@3e356ed6, com.mongodb.KotlinCodecProvider@403b7be3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:10:55|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27201000}
20/08/2024 13:10:55|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:10:56|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:10:56|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.225 seconds (process running for 5.16)
20/08/2024 13:10:58|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:10:58|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:10:58|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:10:59|Migrate project|||sourceIp|SqlExceptionHelper.java:145 |WARN  - SQL Error: 1062, SQLState: 23000
20/08/2024 13:10:59|Migrate project|||sourceIp|SqlExceptionHelper.java:150 |ERROR - Duplicate entry 'Shuffletag' for key 'car.UK22wuwoi31gy0i5mq234y1af1i'
20/08/2024 13:10:59|Migrate project|||sourceIp|UploadService.java:81 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:10:59|Migrate project|||sourceIp|UploadService.java:61 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:13:42|Migrate project|||sourceIp|SqlExceptionHelper.java:145 |WARN  - SQL Error: 1062, SQLState: 23000
20/08/2024 13:13:42|Migrate project|||sourceIp|SqlExceptionHelper.java:150 |ERROR - Duplicate entry 'Shuffletag' for key 'car.UK22wuwoi31gy0i5mq234y1af1i'
20/08/2024 13:13:42|Migrate project|||sourceIp|UploadService.java:81 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:13:42|Migrate project|||sourceIp|UploadService.java:61 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:15:09|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:15:09|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:15:09|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:15:13|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 35172 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:15:13|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:15:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:15:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:15:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.
20/08/2024 13:15:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:15:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:15:14|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:15:14|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:15:14|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:15:14|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:15:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:15:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:15:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:15:15|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:15:15|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1311 ms
20/08/2024 13:15:15|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:15:15|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:15:15|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:15:15|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:15:15|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:15:15|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@212e39ee
20/08/2024 13:15:15|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:15:16|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:15:16|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:15:16|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:15:17|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:15:17|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3bfead8d, com.mongodb.Jep395RecordCodecProvider@5799b8a2, com.mongodb.KotlinCodecProvider@5f662dd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:15:17|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22157200}
20/08/2024 13:15:17|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:15:17|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:15:17|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.546 seconds (process running for 5.628)
20/08/2024 13:15:20|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:15:20|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:15:20|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:15:20|Migrate project|||sourceIp|UploadService.java:81 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:15:20|Migrate project|||sourceIp|UploadService.java:61 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:16:07|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:16:07|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:16:07|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:16:11|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 14232 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:16:11|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:16:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:16:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:16:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 54 ms. Found 2 JPA repository interfaces.
20/08/2024 13:16:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:16:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:16:11|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:16:11|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:16:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 12 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:16:12|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:16:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:16:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:16:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:16:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:16:12|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1134 ms
20/08/2024 13:16:12|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:16:12|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:16:12|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:16:13|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:16:13|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:16:13|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@638d2ce3
20/08/2024 13:16:13|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:16:13|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:16:14|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:16:14|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:16:14|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:16:14|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3bfead8d, com.mongodb.Jep395RecordCodecProvider@5799b8a2, com.mongodb.KotlinCodecProvider@5f662dd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:16:14|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28414900}
20/08/2024 13:16:15|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:16:15|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:16:15|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.169 seconds (process running for 5.119)
20/08/2024 13:16:16|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:16:16|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:16:16|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 13:16:16|Migrate project|||sourceIp|UploadService.java:81 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:16:16|Migrate project|||sourceIp|UploadService.java:61 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:17:56|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:17:56|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:17:56|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:18:00|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 13556 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:18:00|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:18:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:18:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:18:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 48 ms. Found 2 JPA repository interfaces.
20/08/2024 13:18:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:18:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:18:01|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:18:01|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:18:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:18:01|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:18:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:18:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:18:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:18:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:18:01|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1133 ms
20/08/2024 13:18:01|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:18:01|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:18:01|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:18:02|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:18:02|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:18:02|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ae9d0e4
20/08/2024 13:18:02|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:18:02|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:18:03|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:18:03|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:18:03|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:18:03|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@307ba188, com.mongodb.Jep395RecordCodecProvider@34f3c920, com.mongodb.KotlinCodecProvider@73f0b216]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:18:03|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18489500}
20/08/2024 13:18:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:18:04|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:18:04|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.976 seconds (process running for 5.097)
20/08/2024 13:18:05|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:18:05|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:18:05|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 0 ms
20/08/2024 13:18:05|Migrate project|||sourceIp|UploadService.java:81 |ERROR - Error processing data for table | car | from | car.csv|.Car error
20/08/2024 13:18:05|Migrate project|||sourceIp|UploadService.java:61 |ERROR - Error processing data for table | car | from | car.csv|.Car error
20/08/2024 13:18:40|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:18:40|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:18:40|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:18:43|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 9364 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:18:43|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:18:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:18:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:18:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
20/08/2024 13:18:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:18:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:18:44|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:18:44|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:18:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:18:45|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:18:45|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:18:45|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:18:45|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:18:45|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:18:45|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1232 ms
20/08/2024 13:18:45|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:18:45|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:18:45|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:18:45|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:18:45|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:18:46|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a2035e1
20/08/2024 13:18:46|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:18:46|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:18:46|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:18:46|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:18:47|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:18:47|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@73bd146c, com.mongodb.Jep395RecordCodecProvider@1ea78c72, com.mongodb.KotlinCodecProvider@3437fc4f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:18:47|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26178900}
20/08/2024 13:18:47|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:18:47|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:18:47|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.279 seconds (process running for 5.211)
20/08/2024 13:18:49|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:18:49|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:18:49|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:18:49|Migrate project|||sourceIp|UploadService.java:81 |ERROR - Error processing data for table | car | from | car.csv|.Car error
20/08/2024 13:18:49|Migrate project|||sourceIp|UploadService.java:61 |ERROR - Error processing data for table | car | from | car.csv|.Car error
20/08/2024 13:19:44|Migrate project|||sourceIp|UploadService.java:81 |ERROR - Error processing data for table | car | from | car.csv|.No value present
20/08/2024 13:19:44|Migrate project|||sourceIp|UploadService.java:61 |ERROR - Error processing data for table | car | from | car.csv|.No value present
20/08/2024 13:20:45|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:20:45|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:20:45|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:20:49|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 19888 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:20:49|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:20:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:20:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:20:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 54 ms. Found 2 JPA repository interfaces.
20/08/2024 13:20:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:20:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:20:49|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:20:49|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:20:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:20:50|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:20:50|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:20:50|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:20:50|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:20:50|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:20:50|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1120 ms
20/08/2024 13:20:50|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:20:50|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:20:50|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:20:50|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:20:50|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:20:51|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7b4619a3
20/08/2024 13:20:51|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:20:51|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:20:51|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:20:51|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:20:52|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:20:52|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@307ba188, com.mongodb.Jep395RecordCodecProvider@34f3c920, com.mongodb.KotlinCodecProvider@73f0b216]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:20:52|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19523500}
20/08/2024 13:20:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:20:52|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:20:52|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.036 seconds (process running for 5.079)
20/08/2024 13:20:56|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:20:56|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:20:56|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:20:56|Migrate project|||sourceIp|UploadService.java:81 |ERROR - Error processing data for table | car | from | car.csv|.No value present
20/08/2024 13:20:56|Migrate project|||sourceIp|UploadService.java:61 |ERROR - Error processing data for table | car | from | car.csv|.No value present
20/08/2024 13:21:20|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:21:20|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:21:20|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:21:24|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 24268 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:21:24|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:21:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:21:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:21:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 49 ms. Found 2 JPA repository interfaces.
20/08/2024 13:21:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:21:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:21:24|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:21:24|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:21:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:21:25|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:21:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:21:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:21:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:21:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:21:25|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1129 ms
20/08/2024 13:21:25|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:21:25|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:21:25|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:21:25|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:21:25|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:21:26|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7b4619a3
20/08/2024 13:21:26|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:21:26|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:21:26|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:21:26|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:21:27|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:21:27|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@307ba188, com.mongodb.Jep395RecordCodecProvider@34f3c920, com.mongodb.KotlinCodecProvider@73f0b216]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:21:27|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24094400}
20/08/2024 13:21:27|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:21:27|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:21:27|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.936 seconds (process running for 4.824)
20/08/2024 13:21:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:21:35|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:21:35|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:21:35|Migrate project|||sourceIp|UploadService.java:82 |ERROR - Error processing data for table | car | from | car.csv|.No value present
20/08/2024 13:21:35|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | car | from | car.csv|.No value present
20/08/2024 13:22:56|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:22:56|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:22:56|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:23:00|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 24940 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:23:00|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:23:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:23:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:23:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
20/08/2024 13:23:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:23:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:23:01|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:23:01|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:23:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:23:02|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:23:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:23:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:23:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:23:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:23:02|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1312 ms
20/08/2024 13:23:02|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:23:02|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:23:02|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:23:02|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:23:02|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:23:03|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38cf4497
20/08/2024 13:23:03|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:23:03|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:23:04|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:23:04|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:23:04|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:23:05|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@adbc3bc, com.mongodb.Jep395RecordCodecProvider@3c6d3ba, com.mongodb.KotlinCodecProvider@5d3f583d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:23:05|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20690300}
20/08/2024 13:23:05|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:23:05|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:23:05|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.693 seconds (process running for 5.702)
20/08/2024 13:23:15|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:23:15|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:23:15|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:23:18|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 41612 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:23:18|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:23:18|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:23:18|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:23:18|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
20/08/2024 13:23:18|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:23:18|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:23:18|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:23:18|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:23:18|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:23:19|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:23:19|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:23:19|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:23:19|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:23:19|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:23:19|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1177 ms
20/08/2024 13:23:19|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:23:19|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:23:19|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:23:19|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:23:19|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:23:20|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 13:23:20|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:23:20|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:23:21|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:23:21|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:23:21|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:23:21|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5d3f583d, com.mongodb.Jep395RecordCodecProvider@765e5a55, com.mongodb.KotlinCodecProvider@22cca101]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:23:21|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22055700}
20/08/2024 13:23:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:23:21|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:23:22|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.238 seconds (process running for 5.206)
20/08/2024 13:23:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:23:28|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:23:28|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:23:30|Migrate project|||sourceIp|UploadService.java:59 |INFO  - Upload |car.csv| successful.
20/08/2024 13:23:49|Migrate project|||sourceIp|UploadService.java:78 |ERROR - Unknown table name: carw
20/08/2024 13:23:49|Migrate project|||sourceIp|UploadService.java:82 |ERROR - Error processing data for table | carw | from | car.csv|.Unknown table name: carw
20/08/2024 13:23:49|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | carw | from | car.csv|.Unknown table name: carw
20/08/2024 13:24:02|Migrate project|||sourceIp|UploadService.java:59 |INFO  - Upload |car.csv| successful.
20/08/2024 13:24:58|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:24:58|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:24:58|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:25:02|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 15572 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:25:02|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:25:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:25:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:25:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 47 ms. Found 2 JPA repository interfaces.
20/08/2024 13:25:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:25:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:25:02|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:25:02|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:25:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:25:03|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:25:03|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:25:03|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:25:03|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:25:03|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:25:03|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1174 ms
20/08/2024 13:25:03|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:25:03|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:25:03|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:25:04|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:25:04|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:25:04|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43d6262c
20/08/2024 13:25:04|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:25:04|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:25:05|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:25:05|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:25:05|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:25:05|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76685ab0, com.mongodb.Jep395RecordCodecProvider@7bbe5548, com.mongodb.KotlinCodecProvider@7305a443]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:25:05|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19374300}
20/08/2024 13:25:05|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:25:05|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:25:05|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.029 seconds (process running for 4.98)
20/08/2024 13:25:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:25:07|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:25:07|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 13:25:07|Migrate project|||sourceIp|UploadService.java:78 |ERROR - Unknown table name: carr
20/08/2024 13:25:07|Migrate project|||sourceIp|UploadService.java:82 |ERROR - Error processing data for table | carr | from | car.csv|.
20/08/2024 13:25:07|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | carr | from | car.csv|.
20/08/2024 13:26:31|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:26:31|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:26:31|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:26:35|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 38704 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:26:35|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:26:36|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:26:36|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:26:36|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 54 ms. Found 2 JPA repository interfaces.
20/08/2024 13:26:36|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:26:36|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:26:36|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:26:36|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:26:36|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:26:36|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:26:36|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:26:36|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:26:36|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:26:36|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:26:36|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1180 ms
20/08/2024 13:26:37|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:26:37|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:26:37|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:26:37|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:26:37|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:26:37|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41bd6a0f
20/08/2024 13:26:37|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:26:37|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:26:38|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:26:38|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:26:38|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:26:39|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@73f0b216, com.mongodb.Jep395RecordCodecProvider@73bd146c, com.mongodb.KotlinCodecProvider@1ea78c72]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:26:39|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20399000}
20/08/2024 13:26:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:26:39|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:26:39|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.013 seconds (process running for 4.906)
20/08/2024 13:26:47|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:26:47|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:26:47|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 13:26:47|Migrate project|||sourceIp|UploadService.java:87 |ERROR - Unknown table name: carr
20/08/2024 13:26:47|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Unknown table name: carr
20/08/2024 13:27:02|Migrate project|||sourceIp|UploadService.java:74 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:27:02|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:27:28|Migrate project|||sourceIp|UploadService.java:74 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:27:28|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:28:03|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:28:03|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:28:03|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:28:06|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 22112 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:28:06|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:28:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:28:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:28:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 49 ms. Found 2 JPA repository interfaces.
20/08/2024 13:28:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:28:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:28:06|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:28:06|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:28:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:28:07|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:28:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:28:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:28:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:28:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:28:07|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1102 ms
20/08/2024 13:28:07|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:28:07|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:28:07|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:28:07|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:28:07|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:28:08|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41bd6a0f
20/08/2024 13:28:08|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:28:08|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:28:08|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:28:08|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:28:09|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:28:09|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@73f0b216, com.mongodb.Jep395RecordCodecProvider@73bd146c, com.mongodb.KotlinCodecProvider@1ea78c72]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:28:09|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27226000}
20/08/2024 13:28:09|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:28:09|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:28:09|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.176 seconds (process running for 5.128)
20/08/2024 13:28:18|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:28:18|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:28:18|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:28:18|Migrate project|||sourceIp|UploadService.java:74 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:28:18|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:28:20|Migrate project|||sourceIp|UploadService.java:74 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:28:20|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:29:16|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:29:16|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:29:16|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:29:20|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 29076 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:29:20|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:29:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:29:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:29:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 51 ms. Found 2 JPA repository interfaces.
20/08/2024 13:29:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:29:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:29:20|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:29:20|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:29:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:29:21|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:29:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:29:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:29:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:29:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:29:21|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1203 ms
20/08/2024 13:29:21|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:29:21|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:29:21|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:29:22|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:29:22|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:29:22|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 13:29:22|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:29:22|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:29:23|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:29:23|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:29:23|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:29:23|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1722ede1, com.mongodb.Jep395RecordCodecProvider@307ba188, com.mongodb.KotlinCodecProvider@34f3c920]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:29:23|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22042600}
20/08/2024 13:29:23|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:29:24|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:29:24|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.207 seconds (process running for 5.158)
20/08/2024 13:29:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:29:24|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:29:24|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:29:24|Migrate project|||sourceIp|UploadService.java:74 |ERROR - com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.util.Date` from String "17 08 2016": not a valid representation (error: Failed to parse Date value '17 08 2016': Cannot parse date "17 08 2016": not compatible with any of standard forms ("yyyy-MM-dd'T'HH:mm:ss.SSSX", "yyyy-MM-dd'T'HH:mm:ss.SSS", "EEE, dd MMM yyyy HH:mm:ss zzz", "yyyy-MM-dd"))
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 35] (through reference chain: com.example.migrate.entity.Car["release"])
20/08/2024 13:29:24|Migrate project|||sourceIp|UploadService.java:75 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:29:24|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:29:26|Migrate project|||sourceIp|UploadService.java:74 |ERROR - com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.util.Date` from String "17 08 2016": not a valid representation (error: Failed to parse Date value '17 08 2016': Cannot parse date "17 08 2016": not compatible with any of standard forms ("yyyy-MM-dd'T'HH:mm:ss.SSSX", "yyyy-MM-dd'T'HH:mm:ss.SSS", "EEE, dd MMM yyyy HH:mm:ss zzz", "yyyy-MM-dd"))
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 35] (through reference chain: com.example.migrate.entity.Car["release"])
20/08/2024 13:29:26|Migrate project|||sourceIp|UploadService.java:75 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:29:26|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | car | from | car.csv|.
20/08/2024 13:30:31|Migrate project|||sourceIp|UploadService.java:59 |INFO  - Upload |car.csv| successful.
20/08/2024 13:30:33|Migrate project|||sourceIp|UploadService.java:59 |INFO  - Upload |car.csv| successful.
20/08/2024 13:32:18|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:32:18|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:32:18|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:32:20|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 4944 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:32:20|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:32:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:32:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:32:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 2 JPA repository interfaces.
20/08/2024 13:32:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:32:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:32:21|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:32:21|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:32:21|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:32:22|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:32:22|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:32:22|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:32:22|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:32:22|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:32:22|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1226 ms
20/08/2024 13:32:22|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:32:22|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:32:22|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:32:22|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:32:22|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:32:23|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@294c44b7
20/08/2024 13:32:23|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:32:23|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:32:23|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:32:23|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:32:24|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:32:24|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@42a198dd, com.mongodb.Jep395RecordCodecProvider@5924ea91, com.mongodb.KotlinCodecProvider@7bc239db]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:32:24|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20800200}
20/08/2024 13:32:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:32:24|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:32:24|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.085 seconds (process running for 5.092)
20/08/2024 13:32:26|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:32:26|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:32:26|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:32:26|Migrate project|||sourceIp|UploadService.java:59 |INFO  - Upload |car.csv| successful.
20/08/2024 13:32:36|Migrate project|||sourceIp|UploadService.java:88 |ERROR - Unknown table name: carr
20/08/2024 13:32:36|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Unknown table name: carr
20/08/2024 13:32:39|Migrate project|||sourceIp|UploadService.java:59 |INFO  - Upload |car.csv| successful.
20/08/2024 13:32:47|Migrate project|||sourceIp|UploadService.java:74 |ERROR - org.springframework.dao.DataIntegrityViolationException: not-null property references a null or transient value : com.example.migrate.entity.Car.modelName
20/08/2024 13:32:47|Migrate project|||sourceIp|UploadService.java:75 |ERROR - Error processing data for table | car | from | Top 1000 technology companies.csv|.
20/08/2024 13:32:47|Migrate project|||sourceIp|UploadService.java:62 |ERROR - Error processing data for table | car | from | Top 1000 technology companies.csv|.
20/08/2024 13:32:55|Migrate project|||sourceIp|UploadService.java:59 |INFO  - Upload |car.csv| successful.
20/08/2024 13:33:08|Migrate project|||sourceIp|MigrateService.java:30 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 13:33:49|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:33:49|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:33:49|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:33:53|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 30408 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:33:53|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:33:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:33:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:33:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 47 ms. Found 2 JPA repository interfaces.
20/08/2024 13:33:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:33:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:33:54|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:33:54|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:33:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:33:54|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:33:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:33:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:33:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:33:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:33:54|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1130 ms
20/08/2024 13:33:54|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:33:54|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:33:54|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:33:55|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:33:55|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:33:55|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 13:33:55|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:33:55|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:33:56|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:33:56|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:33:56|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:33:57|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@adbc3bc, com.mongodb.Jep395RecordCodecProvider@3c6d3ba, com.mongodb.KotlinCodecProvider@5d3f583d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:33:57|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20765400}
20/08/2024 13:33:57|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:33:57|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:33:57|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.275 seconds (process running for 5.168)
20/08/2024 13:33:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:33:59|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:33:59|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:33:59|Migrate project|||sourceIp|MigrateService.java:32 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 13:49:09|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:49:09|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 13:49:09|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 13:49:13|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 15020 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 13:49:13|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 13:49:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:49:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 13:49:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
20/08/2024 13:49:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 13:49:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 13:49:13|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:49:13|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 13:49:13|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 13:49:14|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 13:49:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 13:49:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 13:49:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 13:49:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 13:49:14|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1146 ms
20/08/2024 13:49:14|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 13:49:14|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 13:49:14|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 13:49:15|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 13:49:15|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 13:49:15|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 13:49:15|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 13:49:15|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 13:49:16|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 13:49:16|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 13:49:16|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 13:49:16|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5d3f583d, com.mongodb.Jep395RecordCodecProvider@765e5a55, com.mongodb.KotlinCodecProvider@22cca101]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:49:16|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30207000}
20/08/2024 13:49:17|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 13:49:17|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 13:49:17|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.207 seconds (process running for 5.074)
20/08/2024 13:49:34|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 13:49:34|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 13:49:34|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 13:49:34|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5d3f583d, com.mongodb.Jep395RecordCodecProvider@765e5a55, com.mongodb.KotlinCodecProvider@22cca101]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 13:49:34|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2693400}
20/08/2024 13:49:34|Migrate project|||sourceIp|MigrateService.java:83 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 14:03:05|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:03:05|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:03:05|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:03:09|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 20188 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:03:09|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:03:09|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:03:09|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:03:09|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 47 ms. Found 2 JPA repository interfaces.
20/08/2024 14:03:09|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:03:09|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:03:09|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:03:09|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:03:09|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:03:10|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:03:10|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:03:10|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:03:10|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:03:10|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:03:10|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1124 ms
20/08/2024 14:03:10|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:03:10|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:03:10|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:03:10|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:03:10|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:03:11|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43d6262c
20/08/2024 14:03:11|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:03:11|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:03:11|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:03:11|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:03:12|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:03:12|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76685ab0, com.mongodb.Jep395RecordCodecProvider@7bbe5548, com.mongodb.KotlinCodecProvider@7305a443]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:03:12|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19093100}
20/08/2024 14:03:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:03:12|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:03:12|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 3.997 seconds (process running for 4.933)
20/08/2024 14:03:14|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 14:03:14|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 14:03:14|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 0 ms
20/08/2024 14:03:14|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76685ab0, com.mongodb.Jep395RecordCodecProvider@7bbe5548, com.mongodb.KotlinCodecProvider@7305a443]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:03:14|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2534700}
20/08/2024 14:07:20|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:07:20|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:07:20|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:07:25|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 26720 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:07:25|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:07:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:07:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:07:26|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 64 ms. Found 2 JPA repository interfaces.
20/08/2024 14:07:26|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:07:26|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:07:26|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:07:26|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:07:26|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:07:26|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:07:26|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:07:26|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:07:26|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:07:26|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:07:26|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1254 ms
20/08/2024 14:07:26|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:07:26|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:07:26|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:07:27|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:07:27|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:07:27|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 14:07:27|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:07:27|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:07:28|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:07:28|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:07:28|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:07:29|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1722ede1, com.mongodb.Jep395RecordCodecProvider@307ba188, com.mongodb.KotlinCodecProvider@34f3c920]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:07:29|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20385800}
20/08/2024 14:07:29|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:07:29|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:07:29|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.469 seconds (process running for 5.436)
20/08/2024 14:07:30|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 14:07:30|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 14:07:30|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 14:07:30|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1722ede1, com.mongodb.Jep395RecordCodecProvider@307ba188, com.mongodb.KotlinCodecProvider@34f3c920]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:07:30|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2828300}
20/08/2024 14:17:58|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:17:58|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:17:58|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:18:02|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 30432 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:18:02|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:18:03|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:18:03|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:18:03|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 2 JPA repository interfaces.
20/08/2024 14:18:03|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:18:03|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:18:03|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:18:03|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:18:03|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:18:04|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:18:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:18:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:18:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:18:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:18:04|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1334 ms
20/08/2024 14:18:04|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:18:04|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:18:04|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:18:04|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:18:04|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:18:05|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7b4619a3
20/08/2024 14:18:05|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:18:05|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:18:05|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:18:05|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:18:06|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:18:06|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@307ba188, com.mongodb.Jep395RecordCodecProvider@34f3c920, com.mongodb.KotlinCodecProvider@73f0b216]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:18:06|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21119100}
20/08/2024 14:18:06|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:18:06|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:18:06|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.421 seconds (process running for 5.385)
20/08/2024 14:18:08|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 14:18:08|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 14:18:08|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 14:18:08|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@307ba188, com.mongodb.Jep395RecordCodecProvider@34f3c920, com.mongodb.KotlinCodecProvider@73f0b216]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:18:08|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3038000}
20/08/2024 14:18:11|Migrate project|||sourceIp|MigrateService.java:118 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 14:18:22|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@307ba188, com.mongodb.Jep395RecordCodecProvider@34f3c920, com.mongodb.KotlinCodecProvider@73f0b216]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:18:22|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3065800}
20/08/2024 14:18:23|Migrate project|||sourceIp|MigrateService.java:118 |INFO  - Migrate table | tech_companies | to MongoDB successful.
20/08/2024 14:18:42|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@307ba188, com.mongodb.Jep395RecordCodecProvider@34f3c920, com.mongodb.KotlinCodecProvider@73f0b216]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:18:42|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2347600}
20/08/2024 14:18:42|Migrate project|||sourceIp|MigrateService.java:118 |INFO  - Migrate table | car | to MongoDB successful.
20/08/2024 14:29:34|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:29:34|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:29:34|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:29:38|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 28284 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:29:38|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:29:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:29:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:29:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 2 JPA repository interfaces.
20/08/2024 14:29:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:29:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:29:39|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:29:39|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:29:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 22 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:29:39|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:29:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:29:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:29:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:29:40|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:29:40|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1291 ms
20/08/2024 14:29:40|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:29:40|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:29:40|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:29:40|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:29:40|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:29:40|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1c411474
20/08/2024 14:29:40|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:29:40|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:29:41|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:29:41|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:29:42|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:29:42|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5a1a5521, com.mongodb.Jep395RecordCodecProvider@5603632c, com.mongodb.KotlinCodecProvider@76685ab0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:29:42|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20768000}
20/08/2024 14:29:42|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:29:42|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:29:42|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.354 seconds (process running for 5.316)
20/08/2024 14:31:37|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 14:31:37|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 14:31:37|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 14:31:37|Migrate project|||sourceIp|UploadService.java:58 |ERROR - com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.util.Date` from String "17 08 2016": not a valid representation (error: Failed to parse Date value '17 08 2016': Cannot parse date "17 08 2016": not compatible with any of standard forms ("yyyy-MM-dd'T'HH:mm:ss.SSSX", "yyyy-MM-dd'T'HH:mm:ss.SSS", "EEE, dd MMM yyyy HH:mm:ss zzz", "yyyy-MM-dd"))
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 29] (through reference chain: com.example.migrate.entity.Car["release"])
20/08/2024 14:31:37|Migrate project|||sourceIp|UploadService.java:59 |ERROR - Upload | Error processing data for table | car | from | car.csv|.
20/08/2024 14:31:37|Migrate project|||sourceIp|UploadService.java:46 |ERROR - Upload | Error processing data for table | car | from | car.csv|.
20/08/2024 14:31:57|Migrate project|||sourceIp|UploadService.java:43 |INFO  - Upload |car.csv| successful.
20/08/2024 14:32:36|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5a1a5521, com.mongodb.Jep395RecordCodecProvider@5603632c, com.mongodb.KotlinCodecProvider@76685ab0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:32:36|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1494100}
20/08/2024 14:32:36|Migrate project|||sourceIp|MigrateService.java:121 |INFO  - Migrate table | car | to MongoDB successful. | Time : 1722415017713
20/08/2024 14:32:46|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:32:46|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:32:46|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:32:48|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 32456 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:32:48|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:32:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:32:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:32:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
20/08/2024 14:32:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:32:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:32:49|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:32:49|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:32:49|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:32:49|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:32:49|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:32:49|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:32:49|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:32:49|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:32:49|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1252 ms
20/08/2024 14:32:49|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:32:49|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:32:49|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:32:50|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:32:50|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:32:50|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@131d977f
20/08/2024 14:32:50|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:32:50|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:32:51|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:32:51|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:32:52|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:32:52|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f662dd, com.mongodb.Jep395RecordCodecProvider@38568876, com.mongodb.KotlinCodecProvider@760ac834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:32:52|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20282300}
20/08/2024 14:32:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:32:52|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:32:52|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.756 seconds (process running for 5.678)
20/08/2024 14:33:10|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 14:33:10|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 14:33:10|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 14:33:10|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f662dd, com.mongodb.Jep395RecordCodecProvider@38568876, com.mongodb.KotlinCodecProvider@760ac834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:33:10|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2338700}
20/08/2024 14:33:11|Migrate project|||sourceIp|MigrateService.java:121 |INFO  - Migrate table | car | to MongoDB successful. | Time : 1722415051861
20/08/2024 14:34:54|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:34:54|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:34:54|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:34:58|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 30884 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:34:58|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:34:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:34:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:34:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
20/08/2024 14:34:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:34:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:34:58|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:34:58|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:34:58|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:34:59|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:34:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:34:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:34:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:34:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:34:59|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1195 ms
20/08/2024 14:34:59|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:34:59|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:34:59|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:34:59|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:34:59|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:35:00|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@131d977f
20/08/2024 14:35:00|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:35:00|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:35:01|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:35:01|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:35:01|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:35:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f662dd, com.mongodb.Jep395RecordCodecProvider@38568876, com.mongodb.KotlinCodecProvider@760ac834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:35:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20337900}
20/08/2024 14:35:01|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:35:01|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:35:01|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.145 seconds (process running for 5.028)
20/08/2024 14:35:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 14:35:35|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 14:35:35|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 14:35:35|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f662dd, com.mongodb.Jep395RecordCodecProvider@38568876, com.mongodb.KotlinCodecProvider@760ac834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:35:35|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2684600}
20/08/2024 14:35:36|Migrate project|||sourceIp|MigrateService.java:128 |INFO  - Migrate table | car | to MongoDB successful. | Time : 646
20/08/2024 14:35:44|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f662dd, com.mongodb.Jep395RecordCodecProvider@38568876, com.mongodb.KotlinCodecProvider@760ac834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:35:44|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2368000}
20/08/2024 14:35:46|Migrate project|||sourceIp|MigrateService.java:128 |INFO  - Migrate table | tech_companies | to MongoDB successful. | Time : 2406
20/08/2024 14:35:55|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f662dd, com.mongodb.Jep395RecordCodecProvider@38568876, com.mongodb.KotlinCodecProvider@760ac834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:35:55|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2158500}
20/08/2024 14:35:57|Migrate project|||sourceIp|MigrateService.java:128 |INFO  - Migrate table | tech_companies | to MongoDB successful. | Time : 1149
20/08/2024 14:35:58|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f662dd, com.mongodb.Jep395RecordCodecProvider@38568876, com.mongodb.KotlinCodecProvider@760ac834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:35:58|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2093900}
20/08/2024 14:35:59|Migrate project|||sourceIp|MigrateService.java:128 |INFO  - Migrate table | tech_companies | to MongoDB successful. | Time : 1078
20/08/2024 14:36:00|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f662dd, com.mongodb.Jep395RecordCodecProvider@38568876, com.mongodb.KotlinCodecProvider@760ac834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:36:00|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2074600}
20/08/2024 14:36:01|Migrate project|||sourceIp|MigrateService.java:128 |INFO  - Migrate table | tech_companies | to MongoDB successful. | Time : 1043
20/08/2024 14:36:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5f662dd, com.mongodb.Jep395RecordCodecProvider@38568876, com.mongodb.KotlinCodecProvider@760ac834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:36:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2426000}
20/08/2024 14:36:02|Migrate project|||sourceIp|MigrateService.java:128 |INFO  - Migrate table | tech_companies | to MongoDB successful. | Time : 1120
20/08/2024 14:48:18|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:48:18|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:48:18|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:48:22|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 12068 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:48:22|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:48:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:48:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:48:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 3 JPA repository interfaces.
20/08/2024 14:48:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:48:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:48:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:48:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:48:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:48:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:48:24|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:48:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:48:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:48:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:48:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:48:24|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1219 ms
20/08/2024 14:48:24|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:48:24|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:48:24|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:48:24|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:48:24|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:48:25|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 14:48:25|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:48:25|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:48:26|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:48:26|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "create table test (id bigint not null auto_increment, c1 varchar(255) not null, c10 varchar(255) not null, c100 varchar(255) not null, c11 varchar(255) not null, c12 varchar(255) not null, c13 varchar(255) not null, c14 varchar(255) not null, c15 varchar(255) not null, c16 varchar(255) not null, c17 varchar(255) not null, c18 varchar(255) not null, c19 varchar(255) not null, c2 varchar(255) not null, c20 varchar(255) not null, c21 varchar(255) not null, c22 varchar(255) not null, c23 varchar(255) not null, c24 varchar(255) not null, c25 varchar(255) not null, c26 varchar(255) not null, c27 varchar(255) not null, c28 varchar(255) not null, c29 varchar(255) not null, c3 varchar(255) not null, c30 varchar(255) not null, c31 varchar(255) not null, c32 varchar(255) not null, c33 varchar(255) not null, c34 varchar(255) not null, c35 varchar(255) not null, c36 varchar(255) not null, c37 varchar(255) not null, c38 varchar(255) not null, c39 varchar(255) not null, c4 varchar(255) not null, c40 varchar(255) not null, c41 varchar(255) not null, c42 varchar(255) not null, c43 varchar(255) not null, c44 varchar(255) not null, c45 varchar(255) not null, c46 varchar(255) not null, c47 varchar(255) not null, c48 varchar(255) not null, c49 varchar(255) not null, c5 varchar(255) not null, c50 varchar(255) not null, c51 varchar(255) not null, c52 varchar(255) not null, c53 varchar(255) not null, c54 varchar(255) not null, c55 varchar(255) not null, c56 varchar(255) not null, c57 varchar(255) not null, c58 varchar(255) not null, c59 varchar(255) not null, c6 varchar(255) not null, c60 varchar(255) not null, c61 varchar(255) not null, c62 varchar(255) not null, c63 varchar(255) not null, c64 varchar(255) not null, c65 varchar(255) not null, c66 varchar(255) not null, c67 varchar(255) not null, c68 varchar(255) not null, c69 varchar(255) not null, c7 varchar(255) not null, c70 varchar(255) not null, c71 varchar(255) not null, c72 varchar(255) not null, c73 varchar(255) not null, c74 varchar(255) not null, c75 varchar(255) not null, c76 varchar(255) not null, c77 varchar(255) not null, c78 varchar(255) not null, c79 varchar(255) not null, c8 varchar(255) not null, c80 varchar(255) not null, c81 varchar(255) not null, c82 varchar(255) not null, c83 varchar(255) not null, c84 varchar(255) not null, c85 varchar(255) not null, c86 varchar(255) not null, c87 varchar(255) not null, c88 varchar(255) not null, c89 varchar(255) not null, c9 varchar(255) not null, c90 varchar(255) not null, c91 varchar(255) not null, c92 varchar(255) not null, c93 varchar(255) not null, c94 varchar(255) not null, c95 varchar(255) not null, c96 varchar(255) not null, c97 varchar(255) not null, c98 varchar(255) not null, c99 varchar(255) not null, primary key (id)) engine=InnoDB" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table test (id bigint not null auto_increment, c1 varchar(255) not null, c10 varchar(255) not null, c100 varchar(255) not null, c11 varchar(255) not null, c12 varchar(255) not null, c13 varchar(255) not null, c14 varchar(255) not null, c15 varchar(255) not null, c16 varchar(255) not null, c17 varchar(255) not null, c18 varchar(255) not null, c19 varchar(255) not null, c2 varchar(255) not null, c20 varchar(255) not null, c21 varchar(255) not null, c22 varchar(255) not null, c23 varchar(255) not null, c24 varchar(255) not null, c25 varchar(255) not null, c26 varchar(255) not null, c27 varchar(255) not null, c28 varchar(255) not null, c29 varchar(255) not null, c3 varchar(255) not null, c30 varchar(255) not null, c31 varchar(255) not null, c32 varchar(255) not null, c33 varchar(255) not null, c34 varchar(255) not null, c35 varchar(255) not null, c36 varchar(255) not null, c37 varchar(255) not null, c38 varchar(255) not null, c39 varchar(255) not null, c4 varchar(255) not null, c40 varchar(255) not null, c41 varchar(255) not null, c42 varchar(255) not null, c43 varchar(255) not null, c44 varchar(255) not null, c45 varchar(255) not null, c46 varchar(255) not null, c47 varchar(255) not null, c48 varchar(255) not null, c49 varchar(255) not null, c5 varchar(255) not null, c50 varchar(255) not null, c51 varchar(255) not null, c52 varchar(255) not null, c53 varchar(255) not null, c54 varchar(255) not null, c55 varchar(255) not null, c56 varchar(255) not null, c57 varchar(255) not null, c58 varchar(255) not null, c59 varchar(255) not null, c6 varchar(255) not null, c60 varchar(255) not null, c61 varchar(255) not null, c62 varchar(255) not null, c63 varchar(255) not null, c64 varchar(255) not null, c65 varchar(255) not null, c66 varchar(255) not null, c67 varchar(255) not null, c68 varchar(255) not null, c69 varchar(255) not null, c7 varchar(255) not null, c70 varchar(255) not null, c71 varchar(255) not null, c72 varchar(255) not null, c73 varchar(255) not null, c74 varchar(255) not null, c75 varchar(255) not null, c76 varchar(255) not null, c77 varchar(255) not null, c78 varchar(255) not null, c79 varchar(255) not null, c8 varchar(255) not null, c80 varchar(255) not null, c81 varchar(255) not null, c82 varchar(255) not null, c83 varchar(255) not null, c84 varchar(255) not null, c85 varchar(255) not null, c86 varchar(255) not null, c87 varchar(255) not null, c88 varchar(255) not null, c89 varchar(255) not null, c9 varchar(255) not null, c90 varchar(255) not null, c91 varchar(255) not null, c92 varchar(255) not null, c93 varchar(255) not null, c94 varchar(255) not null, c95 varchar(255) not null, c96 varchar(255) not null, c97 varchar(255) not null, c98 varchar(255) not null, c99 varchar(255) not null, primary key (id)) engine=InnoDB" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:48:26|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:48:26|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:48:26|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@441d3ddf, com.mongodb.Jep395RecordCodecProvider@420c9959, com.mongodb.KotlinCodecProvider@7e584f3c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:48:26|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21788100}
20/08/2024 14:48:27|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:48:27|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:48:27|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.647 seconds (process running for 5.59)
20/08/2024 14:51:20|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:51:20|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:51:20|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:51:24|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 16320 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:51:24|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:51:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:51:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:51:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 52 ms. Found 3 JPA repository interfaces.
20/08/2024 14:51:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:51:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:51:25|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:51:25|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:51:25|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:51:25|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:51:25|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:51:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:51:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:51:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:51:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:51:25|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1158 ms
20/08/2024 14:51:26|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:51:26|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:51:26|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:51:26|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:51:26|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:51:26|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72e75786
20/08/2024 14:51:26|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:51:26|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:51:27|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:51:27|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:51:27|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:51:28|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2e41b65a, com.mongodb.Jep395RecordCodecProvider@4d25943d, com.mongodb.KotlinCodecProvider@2eea0775]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:51:28|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21226100}
20/08/2024 14:51:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:51:28|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:51:28|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.184 seconds (process running for 5.044)
20/08/2024 14:52:39|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:52:39|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:52:39|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:52:43|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 36444 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:52:43|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:52:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:52:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:52:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 58 ms. Found 3 JPA repository interfaces.
20/08/2024 14:52:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:52:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:52:44|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:52:44|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:52:44|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:52:44|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:52:44|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:52:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:52:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:52:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:52:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:52:44|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1281 ms
20/08/2024 14:52:45|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:52:45|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:52:45|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:52:45|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:52:45|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:52:45|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30bbe83
20/08/2024 14:52:45|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:52:45|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:52:46|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c64 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c64 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c65 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c65 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c66 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c66 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c67 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c67 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c68 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c68 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c69 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c69 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c70 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c70 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c71 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c71 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c72 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c72 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c73 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c73 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c74 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c74 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c75 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c75 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c76 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c76 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c77 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c77 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c78 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c78 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c79 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c79 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c80 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c80 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c81 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c81 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c82 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c82 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c83 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c83 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c84 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c84 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c85 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c85 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c86 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c86 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c87 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c87 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c88 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c88 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c89 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c89 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c90 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c90 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c91 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c91 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c92 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c92 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c93 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c93 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c94 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c94 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c95 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c95 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c96 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c96 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c97 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c97 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c98 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c98 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c99 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c99 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:52:48|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:52:49|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:52:49|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4848681d, com.mongodb.Jep395RecordCodecProvider@7712c315, com.mongodb.KotlinCodecProvider@5a9a187b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:52:49|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25433200}
20/08/2024 14:52:49|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:52:49|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:52:49|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.496 seconds (process running for 7.385)
20/08/2024 14:53:23|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:53:23|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:53:23|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:53:27|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 30856 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:53:27|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:53:28|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:53:28|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:53:28|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 3 JPA repository interfaces.
20/08/2024 14:53:28|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:53:28|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:53:28|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:53:28|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:53:28|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:53:28|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:53:28|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:53:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:53:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:53:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:53:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:53:28|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1182 ms
20/08/2024 14:53:28|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:53:29|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:53:29|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:53:29|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:53:29|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:53:29|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 14:53:29|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:53:29|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:53:30|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:53:30|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c64 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c64 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:53:30|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c65 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c65 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:53:30|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:53:30|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:53:31|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@77f66138, com.mongodb.Jep395RecordCodecProvider@7271320c, com.mongodb.KotlinCodecProvider@12ce659]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:53:31|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21175300}
20/08/2024 14:53:31|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:53:31|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:53:31|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.246 seconds (process running for 5.11)
20/08/2024 14:53:35|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:53:35|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:53:35|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:53:40|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 40716 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:53:40|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:53:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:53:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:53:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 3 JPA repository interfaces.
20/08/2024 14:53:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:53:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:53:40|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:53:40|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:53:40|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:53:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:53:41|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:53:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:53:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:53:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:53:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:53:41|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1148 ms
20/08/2024 14:53:41|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:53:41|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:53:41|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:53:41|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:53:41|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:53:42|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@57b130f6
20/08/2024 14:53:42|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:53:42|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:53:42|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:53:42|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c64 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c64 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:53:42|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:53:43|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:53:43|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7212d3df, com.mongodb.Jep395RecordCodecProvider@9886ec3, com.mongodb.KotlinCodecProvider@6ff05f85]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:53:43|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17266900}
20/08/2024 14:53:43|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:53:43|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:53:43|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.162 seconds (process running for 5.013)
20/08/2024 14:53:47|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:53:47|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:53:47|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:53:51|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 39876 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:53:51|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:53:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:53:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:53:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 52 ms. Found 3 JPA repository interfaces.
20/08/2024 14:53:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:53:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:53:52|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:53:52|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:53:52|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:53:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 12 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:53:52|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:53:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:53:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:53:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:53:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:53:52|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1126 ms
20/08/2024 14:53:53|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:53:53|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:53:53|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:53:53|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:53:53|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:53:53|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 14:53:53|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:53:53|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:53:54|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:53:54|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:53:54|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:53:55|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1d0f03f6, com.mongodb.Jep395RecordCodecProvider@5653429e, com.mongodb.KotlinCodecProvider@78c9c38a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:53:55|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19761200}
20/08/2024 14:53:55|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:53:55|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:53:55|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.079 seconds (process running for 4.973)
20/08/2024 14:58:59|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:58:59|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 14:58:59|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 14:59:03|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 35544 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 14:59:03|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 14:59:03|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:59:03|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 14:59:03|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 3 JPA repository interfaces.
20/08/2024 14:59:04|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 14:59:04|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 14:59:04|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:59:04|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:59:04|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 14:59:04|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 14:59:04|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 14:59:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 14:59:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 14:59:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 14:59:04|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 14:59:04|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1127 ms
20/08/2024 14:59:04|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 14:59:04|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 14:59:04|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 14:59:05|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 14:59:05|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 14:59:05|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6acb45c1
20/08/2024 14:59:05|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 14:59:05|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 14:59:06|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 14:59:06|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c64 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c64 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:59:06|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c65 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c65 varchar(255) not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 14:59:06|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 14:59:06|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 14:59:06|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@77a14911, com.mongodb.Jep395RecordCodecProvider@541c76fd, com.mongodb.KotlinCodecProvider@1142843c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 14:59:06|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18129900}
20/08/2024 14:59:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 14:59:07|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 14:59:07|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.083 seconds (process running for 4.947)
20/08/2024 15:10:36|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:10:36|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:10:36|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:10:40|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 19140 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:10:40|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:10:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:10:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:10:40|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 56 ms. Found 3 JPA repository interfaces.
20/08/2024 15:10:41|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:10:41|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:10:41|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:10:41|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:10:41|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:10:41|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:10:41|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:10:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:10:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:10:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:10:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:10:41|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1160 ms
20/08/2024 15:10:41|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:10:41|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:10:41|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:10:42|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:10:42|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:10:42|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7b4619a3
20/08/2024 15:10:42|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:10:42|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:10:43|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c75 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c75 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c76 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c76 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c77 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c77 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c78 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c78 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c79 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c79 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c80 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c80 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c81 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c81 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c82 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c82 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c83 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c83 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c84 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c84 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c85 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c85 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c86 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c86 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c87 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c87 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c88 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c88 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c89 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c89 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c90 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c90 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c91 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c91 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c92 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c92 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c93 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c93 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c94 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c94 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c95 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c95 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c96 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c96 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c97 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c97 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c98 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c98 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|ExceptionHandlerLoggedImpl.java:27 |WARN  - GenerationTarget encountered exception accepting command : Error executing DDL "alter table test add column c99 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table test add column c99 TEXT not null" via JDBC [Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:575) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:515) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.util.HashMap.forEach(HashMap.java:1429) ~[?:?]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) [spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) [spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: java.sql.SQLSyntaxErrorException: Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) ~[HikariCP-5.1.0.jar:?]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 37 more
20/08/2024 15:10:43|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:10:44|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:10:44|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3fb920d9, com.mongodb.Jep395RecordCodecProvider@5d3a147f, com.mongodb.KotlinCodecProvider@79bb14d8]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:10:44|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20358300}
20/08/2024 15:10:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:10:44|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:10:44|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.724 seconds (process running for 5.567)
20/08/2024 15:12:17|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:12:17|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:12:17|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:12:19|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 34236 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:12:19|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:12:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:12:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:12:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 52 ms. Found 3 JPA repository interfaces.
20/08/2024 15:12:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:12:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:12:20|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:12:20|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:12:20|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:12:20|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:12:21|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:12:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:12:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:12:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:12:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:12:21|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1154 ms
20/08/2024 15:12:21|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:12:21|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:12:21|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:12:21|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:12:21|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:12:21|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6acb45c1
20/08/2024 15:12:21|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:12:21|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:12:22|Migrate project|||sourceIp|SessionFactoryOptionsBuilder.java:504 |WARN  - Unrecognized hibernate.hbm2ddl.auto value: 'drop-create'.  Supported values include 'create', 'create-drop', 'create-only', 'drop', 'update', 'none' and 'validate'.  Ignoring
20/08/2024 15:12:22|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:426 |ERROR - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is java.lang.IllegalArgumentException: Unrecognized 'hibernate.hbm2ddl.auto' setting: 'drop-create'
20/08/2024 15:12:22|Migrate project|||sourceIp|AbstractApplicationContext.java:633 |WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is java.lang.IllegalArgumentException: Unrecognized 'hibernate.hbm2ddl.auto' setting: 'drop-create'
20/08/2024 15:12:22|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:12:22|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:12:22|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Stopping service [Tomcat]
20/08/2024 15:12:22|Migrate project|||sourceIp|ConditionEvaluationReportLogger.java:82 |INFO  - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
20/08/2024 15:12:22|Migrate project|||sourceIp|SpringApplication.java:859 |ERROR - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is java.lang.IllegalArgumentException: Unrecognized 'hibernate.hbm2ddl.auto' setting: 'drop-create'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954) ~[spring-context-6.1.11.jar:6.1.11]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.11.jar:6.1.11]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.2.jar:3.3.2]
	at com.example.migrate.Application.main(Application.java:10) [classes/:?]
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is java.lang.IllegalArgumentException: Unrecognized 'hibernate.hbm2ddl.auto' setting: 'drop-create'
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	... 15 more
Caused by: java.lang.IllegalArgumentException: Unrecognized 'hibernate.hbm2ddl.auto' setting: 'drop-create'
	at org.hibernate.tool.schema.Action.interpretHbm2ddlSetting(Action.java:305) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping.determineAutoSettingImpliedAction(SchemaManagementToolCoordinator.java:721) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping.interpret(SchemaManagementToolCoordinator.java:729) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator$ActionGrouping.interpret(SchemaManagementToolCoordinator.java:766) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.MetadataImpl.shouldOrderTableColumns(MetadataImpl.java:467) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.MetadataImpl.orderColumns(MetadataImpl.java:399) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:279) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-6.1.11.jar:6.1.11]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802) ~[spring-beans-6.1.11.jar:6.1.11]
	... 15 more
20/08/2024 15:13:16|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 26124 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:13:16|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:13:17|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:13:17|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:13:17|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 52 ms. Found 3 JPA repository interfaces.
20/08/2024 15:13:17|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:13:17|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:13:17|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:13:17|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:13:17|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:13:17|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:13:17|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:13:17|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:13:17|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:13:17|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:13:18|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:13:18|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1143 ms
20/08/2024 15:13:18|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:13:18|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:13:18|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:13:18|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:13:18|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:13:18|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3b2c8bda
20/08/2024 15:13:18|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:13:18|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:13:19|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:13:20|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:13:20|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:13:20|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@30ae3c46, com.mongodb.Jep395RecordCodecProvider@3dbcde0b, com.mongodb.KotlinCodecProvider@5c168f98]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:13:20|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24004100}
20/08/2024 15:13:21|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:13:21|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:13:21|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.608 seconds (process running for 5.486)
20/08/2024 15:13:58|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:13:58|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:13:58|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:14:01|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 15800 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:14:01|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:14:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:14:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:14:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 47 ms. Found 3 JPA repository interfaces.
20/08/2024 15:14:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:14:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:14:01|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:14:01|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:14:01|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:14:01|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:14:02|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:14:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:14:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:14:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:14:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:14:02|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1198 ms
20/08/2024 15:14:02|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:14:02|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:14:02|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:14:02|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:14:02|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:14:03|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6acb45c1
20/08/2024 15:14:03|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:14:03|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:14:03|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:14:04|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:14:04|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:14:04|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6919a8a, com.mongodb.Jep395RecordCodecProvider@23c0fcf0, com.mongodb.KotlinCodecProvider@60a4595e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:14:04|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21818300}
20/08/2024 15:14:05|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:14:05|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:14:05|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 4.448 seconds (process running for 5.338)
20/08/2024 15:17:48|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:17:48|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:17:48|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:17:52|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 25724 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:17:52|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:17:53|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:17:53|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:17:53|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 65 ms. Found 3 JPA repository interfaces.
20/08/2024 15:17:53|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:17:53|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:17:53|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:17:53|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:17:53|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:17:53|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 14 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:17:54|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:17:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:17:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:17:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:17:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:17:54|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1209 ms
20/08/2024 15:17:54|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:17:54|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:17:54|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:17:54|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:17:54|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:17:55|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d2c253
20/08/2024 15:17:55|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:17:55|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:17:55|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:17:58|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:17:58|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:17:59|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@174e5929, com.mongodb.Jep395RecordCodecProvider@7569bc9f, com.mongodb.KotlinCodecProvider@62b8dd6a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:17:59|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26160600}
20/08/2024 15:17:59|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:17:59|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:17:59|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.872 seconds (process running for 7.82)
20/08/2024 15:18:05|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:18:05|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:18:05|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:18:05|Migrate project|||sourceIp|AbstractHandlerExceptionResolver.java:247 |WARN  - Resolved [org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded]
20/08/2024 15:18:05|Migrate project|||sourceIp|AbstractHandlerExceptionResolver.java:247 |WARN  - Resolved [org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded]
20/08/2024 15:18:25|Migrate project|||sourceIp|AbstractHandlerExceptionResolver.java:247 |WARN  - Resolved [org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded]
20/08/2024 15:18:25|Migrate project|||sourceIp|AbstractHandlerExceptionResolver.java:247 |WARN  - Resolved [org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded]
20/08/2024 15:19:40|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:19:40|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:20:47|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:20:47|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:20:47|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:20:51|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 18824 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:20:51|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:20:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:20:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:20:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 51 ms. Found 3 JPA repository interfaces.
20/08/2024 15:20:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:20:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:20:52|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:20:52|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:20:52|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:20:52|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:20:52|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:20:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:20:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:20:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:20:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:20:52|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1158 ms
20/08/2024 15:20:53|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:20:53|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:20:53|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:20:53|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:20:53|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:20:53|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72e75786
20/08/2024 15:20:53|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:20:53|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:20:54|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:20:56|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:20:57|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:20:57|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@17796f47, com.mongodb.Jep395RecordCodecProvider@369f85c6, com.mongodb.KotlinCodecProvider@5b6637f3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:20:57|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20848100}
20/08/2024 15:20:57|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:20:57|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:20:57|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.549 seconds (process running for 7.451)
20/08/2024 15:21:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:21:07|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:21:07|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:21:07|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:21:07|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:21:08|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:21:08|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:21:34|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:21:34|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:21:34|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:21:38|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 29524 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:21:38|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:21:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:21:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:21:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 3 JPA repository interfaces.
20/08/2024 15:21:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:21:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:21:39|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:21:39|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:21:39|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:21:39|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:21:39|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:21:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:21:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:21:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:21:39|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:21:39|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1184 ms
20/08/2024 15:21:40|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:21:40|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:21:40|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:21:40|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:21:40|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:21:40|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6fbc7853
20/08/2024 15:21:40|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:21:40|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:21:41|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:21:43|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:21:44|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:21:44|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@17796f47, com.mongodb.Jep395RecordCodecProvider@369f85c6, com.mongodb.KotlinCodecProvider@5b6637f3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:21:44|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21120000}
20/08/2024 15:21:44|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:21:44|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:21:44|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.539 seconds (process running for 7.424)
20/08/2024 15:21:45|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:21:45|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:21:45|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:21:45|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:21:45|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:23:53|Migrate project|||sourceIp|UploadService.java:47 |INFO  - Upload |test.csv| successful.
20/08/2024 15:24:52|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:24:52|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:24:52|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:24:55|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 18824 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:24:55|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:24:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:24:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:24:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 3 JPA repository interfaces.
20/08/2024 15:24:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:24:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:24:56|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:24:56|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:24:56|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:24:56|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:24:57|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:24:57|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:24:57|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:24:57|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:24:57|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:24:57|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1135 ms
20/08/2024 15:24:57|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:24:57|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:24:57|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:24:57|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:24:57|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:24:57|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30bbe83
20/08/2024 15:24:57|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:24:58|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:24:58|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:25:01|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:25:01|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:25:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@674b9b85, com.mongodb.Jep395RecordCodecProvider@6c79a7c1, com.mongodb.KotlinCodecProvider@5d160056]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:25:01|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18449700}
20/08/2024 15:25:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:25:02|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:25:02|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.49 seconds (process running for 7.343)
20/08/2024 15:25:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:25:02|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:25:02|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 15:26:26|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 10488 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:26:26|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:26:27|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:26:27|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:26:27|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 61 ms. Found 3 JPA repository interfaces.
20/08/2024 15:26:27|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:26:27|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:26:27|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:26:27|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:26:27|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:26:27|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:26:27|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:26:27|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:26:27|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:26:27|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:26:27|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:26:27|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1274 ms
20/08/2024 15:26:27|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:26:27|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:26:28|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:26:28|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:26:28|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:26:28|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1c411474
20/08/2024 15:26:28|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:26:28|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:26:29|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:26:31|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:26:32|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:26:32|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@10ecf244, com.mongodb.Jep395RecordCodecProvider@28592982, com.mongodb.KotlinCodecProvider@caee26e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:26:32|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19294700}
20/08/2024 15:26:32|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:26:32|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:26:32|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.64 seconds (process running for 7.522)
20/08/2024 15:26:34|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:26:34|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:26:34|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:28:34|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 27044 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:28:34|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:28:34|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:28:34|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:28:34|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 47 ms. Found 3 JPA repository interfaces.
20/08/2024 15:28:34|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:28:34|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:28:34|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:28:34|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:28:34|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:28:34|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:28:35|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:28:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:28:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:28:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:28:35|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:28:35|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1212 ms
20/08/2024 15:28:35|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:28:35|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:28:35|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:28:35|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:28:35|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:28:36|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35a9e665
20/08/2024 15:28:36|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:28:36|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:28:37|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:28:39|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:28:39|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:28:40|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7510824, com.mongodb.Jep395RecordCodecProvider@7ed6e557, com.mongodb.KotlinCodecProvider@766ab25b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:28:40|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19857000}
20/08/2024 15:28:40|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:28:40|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:28:40|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.519 seconds (process running for 7.461)
20/08/2024 15:28:41|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:28:41|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:28:41|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:29:31|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 35556 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:29:31|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:29:31|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:29:31|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:29:31|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 3 JPA repository interfaces.
20/08/2024 15:29:31|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:29:31|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:29:31|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:29:31|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:29:31|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:29:31|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:29:32|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:29:32|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:29:32|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:29:32|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:29:32|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:29:32|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1187 ms
20/08/2024 15:29:32|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:29:32|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:29:32|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:29:32|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:29:32|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:29:33|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72e75786
20/08/2024 15:29:33|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:29:33|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:29:34|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:29:36|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:29:36|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:29:37|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5d160056, com.mongodb.Jep395RecordCodecProvider@2c555efb, com.mongodb.KotlinCodecProvider@17796f47]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:29:37|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21130500}
20/08/2024 15:29:37|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:29:37|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:29:37|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.498 seconds (process running for 7.34)
20/08/2024 15:29:37|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:29:37|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:29:37|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:30:10|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 8092 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:30:10|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:30:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:30:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:30:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 3 JPA repository interfaces.
20/08/2024 15:30:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:30:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:30:11|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:30:11|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:30:11|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:30:11|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:30:11|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:30:11|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:30:11|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:30:11|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:30:11|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:30:11|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1178 ms
20/08/2024 15:30:11|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:30:11|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:30:11|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:30:12|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:30:12|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:30:12|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30bbe83
20/08/2024 15:30:12|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:30:12|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:30:13|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:30:15|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:30:16|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:30:16|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@674b9b85, com.mongodb.Jep395RecordCodecProvider@6c79a7c1, com.mongodb.KotlinCodecProvider@5d160056]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:30:16|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20920000}
20/08/2024 15:30:16|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:30:16|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:30:16|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.473 seconds (process running for 7.356)
20/08/2024 15:30:18|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:30:18|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:30:18|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:30:19|Migrate project|||sourceIp|UploadService.java:47 |INFO  - Upload |test.csv| successful.
20/08/2024 15:30:22|Migrate project|||sourceIp|UploadService.java:47 |INFO  - Upload |test.csv| successful.
20/08/2024 15:30:24|Migrate project|||sourceIp|UploadService.java:47 |INFO  - Upload |test.csv| successful.
20/08/2024 15:30:50|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:30:50|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:30:50|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:30:54|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 17276 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:30:54|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:30:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:30:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:30:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 3 JPA repository interfaces.
20/08/2024 15:30:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:30:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:30:54|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:30:54|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:30:54|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:30:54|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:30:55|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:30:55|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:30:55|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:30:55|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:30:55|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:30:55|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1232 ms
20/08/2024 15:30:55|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:30:55|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:30:55|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:30:55|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:30:55|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:30:56|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a2035e1
20/08/2024 15:30:56|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:30:56|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:30:57|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:30:59|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:30:59|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:30:59|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@369f85c6, com.mongodb.Jep395RecordCodecProvider@5b6637f3, com.mongodb.KotlinCodecProvider@5dc218e2]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:30:59|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21420900}
20/08/2024 15:31:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:31:00|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:31:00|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.391 seconds (process running for 7.27)
20/08/2024 15:31:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:31:00|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:31:00|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:31:02|Migrate project|||sourceIp|UploadService.java:47 |INFO  - Upload |test.csv| successful.
20/08/2024 15:31:42|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:31:42|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:31:42|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:31:46|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 18348 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:31:46|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:31:47|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:31:47|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:31:47|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 53 ms. Found 3 JPA repository interfaces.
20/08/2024 15:31:47|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:31:47|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:31:47|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:31:47|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:31:47|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:31:47|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:31:47|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:31:47|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:31:47|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:31:47|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:31:47|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:31:47|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1152 ms
20/08/2024 15:31:47|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:31:47|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:31:47|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:31:48|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:31:48|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:31:48|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6fbc7853
20/08/2024 15:31:48|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:31:48|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:31:49|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:31:51|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:31:51|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:31:52|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@17796f47, com.mongodb.Jep395RecordCodecProvider@369f85c6, com.mongodb.KotlinCodecProvider@5b6637f3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:31:52|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18428700}
20/08/2024 15:31:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:31:52|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:31:52|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.345 seconds (process running for 7.207)
20/08/2024 15:31:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:31:54|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:31:54|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:31:54|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:31:54|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:31:55|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:31:55|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:31:57|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:31:57|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:31:58|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:31:58|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:31:59|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:31:59|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:32:37|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:32:37|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:32:37|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:32:41|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 10276 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:32:41|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:32:42|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:32:42|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:32:42|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 57 ms. Found 3 JPA repository interfaces.
20/08/2024 15:32:42|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:32:42|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:32:42|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:32:42|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:32:42|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:32:42|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:32:42|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:32:42|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:32:42|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:32:42|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:32:42|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:32:42|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1224 ms
20/08/2024 15:32:42|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:32:42|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:32:42|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:32:43|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:32:43|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:32:43|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7b4619a3
20/08/2024 15:32:43|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:32:43|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:32:44|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:32:46|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:32:46|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:32:47|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@50165a6d, com.mongodb.Jep395RecordCodecProvider@5ec921f1, com.mongodb.KotlinCodecProvider@172ca6a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:32:47|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17632300}
20/08/2024 15:32:47|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:32:47|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:32:47|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.212 seconds (process running for 7.114)
20/08/2024 15:32:48|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:32:48|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:32:48|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:32:49|Migrate project|||sourceIp|UploadService.java:79 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:32:49|Migrate project|||sourceIp|UploadService.java:50 |ERROR - Upload | Error processing data for table | test | from | test.csv|.
20/08/2024 15:33:18|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:33:18|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:33:18|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:33:22|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 15800 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:33:22|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:33:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:33:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:33:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 54 ms. Found 3 JPA repository interfaces.
20/08/2024 15:33:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:33:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:33:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:33:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:33:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:33:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:33:23|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:33:23|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:33:23|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:33:23|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:33:23|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:33:23|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1152 ms
20/08/2024 15:33:23|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:33:24|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:33:24|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:33:24|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:33:24|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:33:24|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a2035e1
20/08/2024 15:33:24|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:33:24|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:33:25|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:33:27|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:33:28|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:33:28|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@369f85c6, com.mongodb.Jep395RecordCodecProvider@5b6637f3, com.mongodb.KotlinCodecProvider@5dc218e2]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:33:28|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30834200}
20/08/2024 15:33:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:33:28|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:33:28|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.508 seconds (process running for 7.413)
20/08/2024 15:33:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:33:28|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:33:28|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 0 ms
20/08/2024 15:33:31|Migrate project|||sourceIp|UploadService.java:47 |INFO  - Upload |test.csv| successful.
20/08/2024 15:33:35|Migrate project|||sourceIp|UploadService.java:47 |INFO  - Upload |test.csv| successful.
20/08/2024 15:34:02|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:34:02|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:34:02|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:34:06|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 36156 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:34:06|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:34:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:34:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:34:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 83 ms. Found 3 JPA repository interfaces.
20/08/2024 15:34:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:34:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:34:06|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:34:06|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:34:06|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:34:06|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:34:07|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:34:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:34:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:34:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:34:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:34:07|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1349 ms
20/08/2024 15:34:07|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:34:07|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:34:07|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:34:08|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:34:08|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:34:08|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72e75786
20/08/2024 15:34:08|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:34:08|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:34:09|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:34:11|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:34:11|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:34:12|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@17796f47, com.mongodb.Jep395RecordCodecProvider@369f85c6, com.mongodb.KotlinCodecProvider@5b6637f3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:34:12|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33937500}
20/08/2024 15:34:12|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:34:12|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:34:12|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.557 seconds (process running for 7.427)
20/08/2024 15:34:19|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:34:19|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 15:34:19|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 15:34:22|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 28284 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:34:22|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:34:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:34:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:34:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 64 ms. Found 3 JPA repository interfaces.
20/08/2024 15:34:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:34:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:34:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:34:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:34:23|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:34:23|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:34:24|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:34:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:34:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:34:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:34:24|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:34:24|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1318 ms
20/08/2024 15:34:24|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:34:24|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:34:24|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:34:24|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:34:24|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:34:25|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@57b130f6
20/08/2024 15:34:25|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:34:25|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:34:26|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:34:27|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:34:28|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:34:28|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@21553c3a, com.mongodb.Jep395RecordCodecProvider@6c1d25fa, com.mongodb.KotlinCodecProvider@7510824]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:34:28|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17212400}
20/08/2024 15:34:28|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:34:28|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:34:28|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.376 seconds (process running for 7.352)
20/08/2024 15:34:29|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 15:34:29|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 15:34:29|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 15:35:50|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 30308 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 15:35:50|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 15:35:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:35:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 15:35:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 55 ms. Found 3 JPA repository interfaces.
20/08/2024 15:35:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 15:35:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 15:35:51|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:35:51|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:35:51|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 15:35:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
20/08/2024 15:35:52|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 15:35:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 15:35:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 15:35:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 15:35:52|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 15:35:52|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1208 ms
20/08/2024 15:35:52|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 15:35:52|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 15:35:52|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 15:35:52|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 15:35:52|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 15:35:53|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6acb45c1
20/08/2024 15:35:53|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 15:35:53|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 15:35:53|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 15:35:56|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 15:35:56|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 15:35:56|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6c79a7c1, com.mongodb.Jep395RecordCodecProvider@5d160056, com.mongodb.KotlinCodecProvider@2c555efb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 15:35:56|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20890500}
20/08/2024 15:35:57|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 15:35:57|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 15:35:57|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.542 seconds (process running for 7.468)
20/08/2024 16:02:54|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 16:02:54|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 16:02:54|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 16:08:08|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 20508 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 16:08:08|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 16:08:08|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:08:08|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 16:08:08|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 57 ms. Found 3 JPA repository interfaces.
20/08/2024 16:08:08|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:08:08|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 16:08:08|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:08:08|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:08:08|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:08:08|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 16:08:09|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 16:08:09|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 16:08:09|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 16:08:09|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 16:08:09|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 16:08:09|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1195 ms
20/08/2024 16:08:09|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 16:08:09|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 16:08:09|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 16:08:10|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 16:08:10|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 16:08:10|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@294c44b7
20/08/2024 16:08:10|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 16:08:10|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 16:08:11|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 16:08:14|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 16:08:14|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 16:08:15|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@17796f47, com.mongodb.Jep395RecordCodecProvider@369f85c6, com.mongodb.KotlinCodecProvider@5b6637f3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:08:15|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28332800}
20/08/2024 16:08:15|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 16:08:15|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 16:08:15|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 7.377 seconds (process running for 8.261)
20/08/2024 16:08:23|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 16:08:23|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 16:08:23|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 16:08:23|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@17796f47, com.mongodb.Jep395RecordCodecProvider@369f85c6, com.mongodb.KotlinCodecProvider@5b6637f3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:08:23|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3892300}
20/08/2024 16:08:25|Migrate project|||sourceIp|MigrateService.java:165 |ERROR - Migrate | Unknown table name: test
20/08/2024 16:10:20|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 16:10:20|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 16:10:20|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 16:10:24|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 38516 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 16:10:24|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 16:10:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:10:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 16:10:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 54 ms. Found 3 JPA repository interfaces.
20/08/2024 16:10:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:10:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 16:10:24|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:10:24|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:10:24|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:10:24|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 16:10:25|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 16:10:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 16:10:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 16:10:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 16:10:25|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 16:10:25|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1161 ms
20/08/2024 16:10:25|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 16:10:25|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 16:10:25|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 16:10:25|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 16:10:25|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 16:10:26|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a2035e1
20/08/2024 16:10:26|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 16:10:26|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 16:10:27|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 16:10:29|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 16:10:29|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 16:10:29|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7df994ec, com.mongodb.Jep395RecordCodecProvider@1c8da7e8, com.mongodb.KotlinCodecProvider@674b9b85]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:10:29|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21463600}
20/08/2024 16:10:29|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 16:10:29|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 16:10:29|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.166 seconds (process running for 7.018)
20/08/2024 16:10:33|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 16:10:33|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 16:10:33|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 16:10:33|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7df994ec, com.mongodb.Jep395RecordCodecProvider@1c8da7e8, com.mongodb.KotlinCodecProvider@674b9b85]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:10:33|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2510400}
20/08/2024 16:10:35|Migrate project|||sourceIp|DirectJDKLog.java:175 |ERROR - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: filter can not be null] with root cause
java.lang.IllegalArgumentException: filter can not be null
	at com.mongodb.assertions.Assertions.notNull(Assertions.java:49) ~[mongodb-driver-core-5.0.1.jar:?]
	at com.mongodb.client.internal.FindIterableImpl.<init>(FindIterableImpl.java:63) ~[mongodb-driver-sync-5.0.1.jar:?]
	at com.mongodb.client.internal.MongoCollectionImpl.createFindIterable(MongoCollectionImpl.java:305) ~[mongodb-driver-sync-5.0.1.jar:?]
	at com.mongodb.client.internal.MongoCollectionImpl.find(MongoCollectionImpl.java:275) ~[mongodb-driver-sync-5.0.1.jar:?]
	at com.mongodb.client.internal.MongoCollectionImpl.find(MongoCollectionImpl.java:270) ~[mongodb-driver-sync-5.0.1.jar:?]
	at com.example.migrate.service.MigrateService.migrate(MigrateService.java:107) ~[classes/:?]
	at com.example.migrate.api.Migrate.migrate(Migrate.java:18) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1570) [?:?]
20/08/2024 16:10:57|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 16:10:57|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 16:10:57|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 16:11:01|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 29628 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 16:11:01|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 16:11:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:11:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 16:11:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 54 ms. Found 3 JPA repository interfaces.
20/08/2024 16:11:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:11:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 16:11:02|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:11:02|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:11:02|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:11:02|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
20/08/2024 16:11:02|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 16:11:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 16:11:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 16:11:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 16:11:02|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 16:11:02|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1139 ms
20/08/2024 16:11:02|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 16:11:02|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 16:11:03|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 16:11:03|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 16:11:03|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 16:11:03|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c0fefac
20/08/2024 16:11:03|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 16:11:03|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 16:11:04|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 16:11:06|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 16:11:06|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 16:11:07|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5b6637f3, com.mongodb.Jep395RecordCodecProvider@5dc218e2, com.mongodb.KotlinCodecProvider@11d474a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:11:07|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26812200}
20/08/2024 16:11:07|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 16:11:07|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 16:11:07|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.104 seconds (process running for 7.019)
20/08/2024 16:11:09|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 16:11:09|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 16:11:09|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 16:11:09|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5b6637f3, com.mongodb.Jep395RecordCodecProvider@5dc218e2, com.mongodb.KotlinCodecProvider@11d474a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:11:09|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2607400}
20/08/2024 16:11:21|Migrate project|||sourceIp|MigrateService.java:124 |INFO  - Migrate table | test | to MongoDB successful. | Time : 12334
20/08/2024 16:13:46|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 16:13:46|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 16:13:46|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 16:13:50|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 28444 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 16:13:50|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 16:13:50|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:13:50|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 16:13:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 70 ms. Found 3 JPA repository interfaces.
20/08/2024 16:13:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:13:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 16:13:51|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:13:51|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:13:51|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:13:51|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
20/08/2024 16:13:51|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 16:13:51|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 16:13:51|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 16:13:51|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 16:13:51|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 16:13:51|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1332 ms
20/08/2024 16:13:51|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 16:13:51|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 16:13:51|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 16:13:52|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 16:13:52|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 16:13:52|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@647ff23e
20/08/2024 16:13:52|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 16:13:52|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 16:13:53|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 16:13:55|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 16:13:56|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 16:13:56|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@21553c3a, com.mongodb.Jep395RecordCodecProvider@6c1d25fa, com.mongodb.KotlinCodecProvider@7510824]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:13:56|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20411500}
20/08/2024 16:13:56|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 16:13:56|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 16:13:56|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 6.89 seconds (process running for 7.849)
20/08/2024 16:14:00|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 16:14:00|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 16:14:00|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 1 ms
20/08/2024 16:14:00|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@21553c3a, com.mongodb.Jep395RecordCodecProvider@6c1d25fa, com.mongodb.KotlinCodecProvider@7510824]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:14:00|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2739700}
20/08/2024 16:14:12|Migrate project|||sourceIp|MigrateService.java:129 |INFO  - Migrate table | test | to MongoDB successful. | Time : 12482
20/08/2024 16:18:50|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@21553c3a, com.mongodb.Jep395RecordCodecProvider@6c1d25fa, com.mongodb.KotlinCodecProvider@7510824]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:18:50|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2694100}
20/08/2024 16:19:02|Migrate project|||sourceIp|MigrateService.java:129 |INFO  - Migrate table | test | to MongoDB successful. | Time : 11556
20/08/2024 16:24:09|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@21553c3a, com.mongodb.Jep395RecordCodecProvider@6c1d25fa, com.mongodb.KotlinCodecProvider@7510824]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:24:09|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2067500}
20/08/2024 16:24:19|Migrate project|||sourceIp|MigrateService.java:129 |INFO  - Migrate table | test | to MongoDB successful. | Time : 10175
20/08/2024 16:52:31|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 16:52:31|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 16:52:31|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
20/08/2024 16:54:37|Migrate project|||sourceIp|StartupInfoLogger.java:50 |INFO  - Starting Application using Java 22.0.1 with PID 19928 (D:\Work station\git\Migrate_My_To_Mon\target\classes started by JP in D:\Work station\git\Migrate_My_To_Mon)
20/08/2024 16:54:37|Migrate project|||sourceIp|SpringApplication.java:654 |INFO  - No active profile set, falling back to 1 default profile: "default"
20/08/2024 16:54:37|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:54:37|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20/08/2024 16:54:37|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 83 ms. Found 3 JPA repository interfaces.
20/08/2024 16:54:37|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:295 |INFO  - Multiple Spring Data modules found, entering strict repository configuration mode
20/08/2024 16:54:37|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:143 |INFO  - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
20/08/2024 16:54:37|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.CarRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:54:37|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TechCompaniesRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:54:37|Migrate project|||sourceIp|RepositoryConfigurationExtensionSupport.java:320 |INFO  - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.migrate.repository.TestRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
20/08/2024 16:54:37|Migrate project|||sourceIp|RepositoryConfigurationDelegate.java:211 |INFO  - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
20/08/2024 16:54:38|Migrate project|||sourceIp|TomcatWebServer.java:111 |INFO  - Tomcat initialized with port 8080 (http)
20/08/2024 16:54:38|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing ProtocolHandler ["http-nio-8080"]
20/08/2024 16:54:38|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting service [Tomcat]
20/08/2024 16:54:38|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting Servlet engine: [Apache Tomcat/10.1.26]
20/08/2024 16:54:38|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring embedded WebApplicationContext
20/08/2024 16:54:38|Migrate project|||sourceIp|ServletWebServerApplicationContext.java:296 |INFO  - Root WebApplicationContext: initialization completed in 1536 ms
20/08/2024 16:54:38|Migrate project|||sourceIp|LogHelper.java:31 |INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
20/08/2024 16:54:39|Migrate project|||sourceIp|Version.java:44 |INFO  - HHH000412: Hibernate ORM core version 6.5.2.Final
20/08/2024 16:54:39|Migrate project|||sourceIp|RegionFactoryInitiator.java:50 |INFO  - HHH000026: Second-level cache disabled
20/08/2024 16:54:39|Migrate project|||sourceIp|SpringPersistenceUnitInfo.java:87 |INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
20/08/2024 16:54:39|Migrate project|||sourceIp|HikariDataSource.java:109 |INFO  - HikariPool-1 - Starting...
20/08/2024 16:54:39|Migrate project|||sourceIp|HikariPool.java:554 |INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2cc61b3b
20/08/2024 16:54:39|Migrate project|||sourceIp|HikariDataSource.java:122 |INFO  - HikariPool-1 - Start completed.
20/08/2024 16:54:39|Migrate project|||sourceIp|DialectFactoryImpl.java:153 |WARN  - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
20/08/2024 16:54:40|Migrate project|||sourceIp|JtaPlatformInitiator.java:59 |INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
20/08/2024 16:54:43|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:437 |INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 16:54:44|Migrate project|||sourceIp|JpaBaseConfiguration.java:236 |WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
20/08/2024 16:54:44|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2c555efb, com.mongodb.Jep395RecordCodecProvider@17796f47, com.mongodb.KotlinCodecProvider@369f85c6]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:54:44|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27201000}
20/08/2024 16:54:45|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Starting ProtocolHandler ["http-nio-8080"]
20/08/2024 16:54:45|Migrate project|||sourceIp|TomcatWebServer.java:243 |INFO  - Tomcat started on port 8080 (http) with context path '/'
20/08/2024 16:54:45|Migrate project|||sourceIp|StartupInfoLogger.java:56 |INFO  - Started Application in 8.324 seconds (process running for 9.921)
20/08/2024 16:54:51|Migrate project|||sourceIp|DirectJDKLog.java:173 |INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
20/08/2024 16:54:51|Migrate project|||sourceIp|FrameworkServlet.java:532 |INFO  - Initializing Servlet 'dispatcherServlet'
20/08/2024 16:54:51|Migrate project|||sourceIp|FrameworkServlet.java:554 |INFO  - Completed initialization in 2 ms
20/08/2024 16:54:51|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2c555efb, com.mongodb.Jep395RecordCodecProvider@17796f47, com.mongodb.KotlinCodecProvider@369f85c6]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:54:51|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3507700}
20/08/2024 16:56:49|Migrate project|||sourceIp|MigrateService.java:129 |INFO  - Migrate table | test | to MongoDB successful. | Time : 118120
20/08/2024 16:58:37|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/22.0.1+8-16"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2c555efb, com.mongodb.Jep395RecordCodecProvider@17796f47, com.mongodb.KotlinCodecProvider@369f85c6]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
20/08/2024 16:58:37|Migrate project|||sourceIp|SLF4JLogger.java:71 |INFO  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3156100}
20/08/2024 17:00:26|Migrate project|||sourceIp|MigrateService.java:129 |INFO  - Migrate table | test | to MongoDB successful. | Time : 109572
20/08/2024 17:03:49|Migrate project|||sourceIp|AbstractEntityManagerFactoryBean.java:650 |INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
20/08/2024 17:03:49|Migrate project|||sourceIp|HikariDataSource.java:349 |INFO  - HikariPool-1 - Shutdown initiated...
20/08/2024 17:03:49|Migrate project|||sourceIp|HikariDataSource.java:351 |INFO  - HikariPool-1 - Shutdown completed.
